{"version":3,"sources":["PreviewPane.js","Sliders/components.js","Sliders/BarChart.js","Sliders/RangeSlider.js","Sliders/Sliders.js","SliderPane.js","QueryFilter.js","FilterPane.js","InfoFields.js","InfoPane.js","ViewPane.js","MappingsPane.js","Export.js","Projection.js","Layout.js","Data.js","App.js","serviceWorker.js","index.js"],"names":["PreviewPane","props","state","dimensions","imgURL","previewImage","timeoutId","this","setPreviewPaneCanvas","side_canvas","prevProps","hover_index","setState","clearTimeout","setTimeout","previewPane_image_size","style","position","width","height","textAlign","display","verticalAlign","setPreviewImage","ref","Component","React","memo","thumbHeight","MuiRail","withStyles","theme","rail","backgroundColor","palette","grey","pointerEvents","railHotspot","top","cursor","classes","getRailProps","className","MuiHandle","root","secondary","main","marginLeft","marginTop","border","borderRadius","whiteSpace","zIndex","domain","min","max","handle","id","value","percent","getHandleProps","role","left","MuiTrack","track","trackHotspot","source","target","getTrackProps","MuiTickComponent","tick","count","format","Typography","label","variant","defaultProps","d","BarChart","isHovering","barSelected","onLeave","bind","normalize","data","i","settings","currentProjection","push","metadata","sliderID","buckets","bucketsFinder","stepSize","targetBucket","Math","abs","length","bucketCount","parseFloat","toFixed","bucketList","Object","values","ratio","apply","round","barDataValues","chartElement","barID","index","arr","Float32Array","fill","prevArr","barData","forEach","element","calculateProjection","color","selected","defaults","animation","markerData","Array","barDataSoll","histogram","barDataIst","calculateHistogram","barDataCalc","labels","map","val","datasets","type","barThickness","normalized","order","hoverBackgroundColor","options","responsive","interaction","mode","intersect","events","onClick","onHover","event","bgColor","hoverEffect","native","plugins","legend","tooltip","enabled","scales","x","stacked","yAxes","beginAtZero","onMouseLeave","RangeSlider","datafilter","range","update","inputValues","typeNumber","step","isToggleOn","changeSlider","currentValues","handleClick","e","prevState","stopPropagation","onChangeSlider","title","Grid","container","item","xs","rootStyle","onUpdate","onChange","handles","right","tracks","alignItems","justifyContent","marginRight","TextField","fullWidth","size","margin","inputProps","padding","evt","newState","Tooltip","info","Sliders","slidersAr","sliders","refSliders","filterData","filtered","createRef","filterVals","componentName","console","log","filteredArr","list","idx","reduce","curr","SliderList","slider","SliderPane","sliderReset","filterImageAr","CustomAutoComplete","parsedCategory","concat","GridDataAutoCompleteHandler","CustomResultProcessing","row","fieldOrLabel","operator","field","tryToGetFieldCategory","toLowerCase","indexOf","_","startsWith","SimpleResultProcessing","Filterbox","exportMetadata","filteredMetadata","obj","filterDataToExportCSV","document","getElementsByClassName","click","parseOK","query2","applyFilter","resetFilter","search","customAutoComplete","newData","process","query","self","pick","fontWeight","fontSize","expressions","autoCompleteHandler","customRenderCompletionItem","onParseOk","onParseError","editorConfig","lineWrapping","ButtonGroup","Button","FilterPane","spacing","allFilter","InfoFields","InfoList","infos","uuid","wrap","Title","InfoPane","ViewPane","handleChange","checked","handleChangeGrey","filterGrey","clusters","handleChangeCluster","option","Box","Slider","defaultValue","scaleMin","handleChangeScale","scaleMax","handleChangeZoom","MappingsPane","handleSelectAlgorithm","handleSelectDataset","v","selectAlgorithm","selectDataset","algorithm_options","algorithm_choice","dataset_options","selectedDataset","datasetInfo","Export","makePNG","canvasToImage","getElementById","marginBottom","filename","Projection","handleResize","camera","aspect","updateProjectionMatrix","renderer","setSize","current_scale","getScaleFromZ","z","d3_x","d3_y","y","resize_transform","d3","translate","scale","view","mount","d3_zoom","transform","updateProjection","ar","filterAr","ranges","ar_sliced","sprite_number","start","sprite_size","end","slice","c","points","scene","children","geometry","attributes","filteredActive","THREE","needsUpdate","updatePass2Shader","num","material","uniforms","greyTransparency","imageTransparency","updateClusterColors","clusterSelected","numVertices","clusterColors","total","clustersAr_sliced","l","clusterId","cluster","clusterActive","loadTiles","tilesLoaded","init","pointsAr","addPoints","setupCamera","animate","getZFromScale","changeEmbeddings","sprite_side","tile_locations","n","datasetDir","datasetIMG","src","img","createElement","new_choice","embedding_chunks","mappings","echunk","array","tween","TWEEN","to","easing","Linear","None","input","clamp","scaleProj","rvFOV","degToRad","fov","tan","camera_z_position","fov_height","d3_transform","k","set","new_size","zoomScaler","point_group","camera_z_start","embeddings_data","vFOV","min_x","max_x","ys","min_y","max_y","max_x_from_center","m","max_y_from_center","far","scaleExtent","on","zoomHandler","call","initial_scale","initial_transform","loader","textures","t","load","w","flipY","magFilter","vertices","embedding","vert","positionAr","offsetAr","clusterAr","addAttribute","texture_subsize","sprite_image_size","sprite_actual_size","floor","clusterList","clusterTypeSelected","includes","texture","repeat","vertexShader","fragmentShader","transparent","point_cloud","userData","sprite_index","add","hover_container","point","frustumCulled","visible","digit_index","full_index","offsets","copyVector3sArray","offset","highlight_container","highlights","remove","mouse_position","previewPane_ctx","mouse_vector","mouseX","mouseY","mouseToThree","raycaster","setFromCamera","params","Points","threshold","intersects","intersectObjects","sorted_intersects","sortIntersectsByDistanceToRay","object","undefined","setHoverIndex","highlightPoint","clearRect","fillRect","fillStyle","drawImage","error","domElement","node","checkIntersects","clickOnImage","preserveDrawingBuffer","alpha","setClearColor","autoClear","appendChild","addBlankHighlightPoints","handleMouse","requestAnimationFrame","clear","parseInt","greyRenderTypeSelected","render","removeChild","tileProgress","allTiles","CircularProgress","overflow","Layout","newArr","A","B","currentFilter","currentSearch","refProjection","current","toggleControl","collapsedControl","toggleObject","collapsedObject","ww","wh","previewPane_height","controlPane_height","filterPane_height","setDefaults","algorithm_name","window","addEventListener","addToUrl","p","changeDataset","innerWidth","innerHeight","previewPane_mount","offsetHeight","imageSmoothingEnabled","canvas","ctx","getContext","url_prefix","Filename","alt","removeEventListener","url","link_URL","open","err","main_style","background","general_style","lineHeight","displayNumb","maxHeight","controlMenu_mount","collapsed","iconShape","defaultOpen","icon","grem","font_size","href","rel","initPath","Data","dataset_dirs","defaultDataset","embeddings","queryString","location","urlParams","URLSearchParams","get","loadInit","path","loadSettings","loadBarData","loadMetadata","ID","name","fetch","file","then","response","json","scaled_embeddings","paramName","navigate","toString","directory","choice","newDataset","loadConfig","default","foundInitDataset","floatColorConvertedArr","rgb","prepareMappings","loadDataset","withRouter","useParams","useNavigate","App","exact","Boolean","hostname","match","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a2060d44.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nclass PreviewPane extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dimensions: {},\n      imgURL: null,\n      previewImage: false,\n      timeoutId: null\n    };\n    // this.onImgLoad = this.onImgLoad.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.setPreviewPaneCanvas(this.side_canvas);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.hover_index !== prevProps.hover_index) {\n      this.setState({ previewImage: false });\n      clearTimeout(this.state.timeoutId);\n      const timeoutId = setTimeout(() => {\n        this.setState({ previewImage: true });\n      }, 100);\n      this.setState({ timeoutId });\n    }\n  }\n\n  render() {\n    let {\n      previewPane_image_size,\n    } = this.props;\n    // const {width, height} = this.state.dimensions;\n    // var imgWidth = \"auto\";\n    // var imgHeight = \"100%\";\n    // if (width >= height) {\n    //   imgWidth = \"100%\";\n    //   imgHeight = \"auto\"\n    // };\n\n    return (\n      <div>\n      <div style={{position: \"absolute\", width: previewPane_image_size, height: previewPane_image_size, textAlign: \"center\"}}>\n        <span style={{display: \"inline-block\", height: \"100%\", verticalAlign: \"middle\"}}/>\n\n      {this.state.previewImage === true ? this.props.setPreviewImage() : null}\n      \n      </div>\n        <canvas \n          ref={side_canvas => {\n            this.side_canvas = side_canvas\n          }}\n          width={previewPane_image_size}\n          height={previewPane_image_size}\n        />\n      </div>\n    )\n  }\n}\nexport default React.memo(PreviewPane)\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\n// Based on Material Design spec:\n// Styles by https://github.com/RafeSacks\n// https://material.io/design/components/sliders.html#spec\nconst trackHeight = 2;\nconst thumbHeight = 12;\n\n// *******************************************************\n// RAIL COMPONENT\n// *******************************************************\n\nconst muiRailStyle = theme => ({\n  rail: {\n    backgroundColor: theme.palette.grey[400],\n    width: \"100%\",\n    height: trackHeight,\n    position: \"absolute\",\n    pointerEvents: \"none\"\n  },\n  railHotspot: {\n    // backgroundColor: \"green\", // for debugging\n    width: \"100%\",\n    height: thumbHeight * 2, // Invisible hotspot same size as thumb\n    top: thumbHeight * -1,\n    position: \"absolute\",\n    cursor: \"pointer\"\n  }\n});\n\nfunction MuiRailComponent({ classes, getRailProps }) {\n  return (\n    <Fragment>\n      <div className={classes.railHotspot} {...getRailProps()} />\n      <div className={classes.rail} />\n    </Fragment>\n  );\n}\n\nMuiRailComponent.propTypes = {\n  classes: PropTypes.object.isRequired,\n  getRailProps: PropTypes.func.isRequired\n};\n\nexport const MuiRail = withStyles(muiRailStyle)(MuiRailComponent);\n\n// *******************************************************\n// HANDLE COMPONENT\n// *******************************************************\n\nconst muiHandleStyle = theme => ({\n  root: {\n    backgroundColor: theme.palette.secondary.main,\n    marginLeft: thumbHeight * -0.5,\n    marginTop: thumbHeight * -0.5,\n    width: thumbHeight,\n    height: thumbHeight,\n    border: 0,\n    borderRadius: \"50%\", // circle\n    // boxShadow: \"1px 1px 1px 1px rgba(0, 0, 0, 0.2)\",\n    whiteSpace: \"nowrap\", // for child display inline-block to work\n    position: \"absolute\",\n    zIndex: 2,\n    cursor: \"pointer\"\n  }\n});\n\nfunction MuiHandleComponent({\n  domain: [min, max],\n  handle: { id, value, percent },\n  classes,\n  getHandleProps\n}) {\n  return (\n    <div\n      role=\"slider\"\n      aria-valuemin={min}\n      aria-valuemax={max}\n      aria-valuenow={value}\n      className={classes.root}\n      style={{ left: `${percent}%` }}\n      {...getHandleProps(id)}\n    />\n  );\n}\n\nMuiHandleComponent.propTypes = {\n  domain: PropTypes.array.isRequired,\n  handle: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    value: PropTypes.number.isRequired,\n    percent: PropTypes.number.isRequired\n  }).isRequired,\n  classes: PropTypes.object.isRequired,\n  getHandleProps: PropTypes.func.isRequired\n};\n\nexport const MuiHandle = withStyles(muiHandleStyle)(MuiHandleComponent);\n\n// *******************************************************\n// TRACK COMPONENT\n// *******************************************************\n\nconst muiTrackStyle = theme => ({\n  track: {\n    backgroundColor: theme.palette.secondary.main,\n    height: trackHeight,\n    position: \"absolute\",\n    zIndex: 1,\n    pointerEvents: \"none\"\n  },\n  trackHotspot: {\n    // backgroundColor: \"grey\", // for debugging\n    height: thumbHeight, // Invisible hotspot same size as thumb\n    top: thumbHeight * -0.5,\n    position: \"absolute\",\n    cursor: \"pointer\"\n  }\n});\n\nfunction MuiTrackComponent({ classes, source, target, getTrackProps }) {\n  const left = `${source.percent}%`;\n  const width = `${target.percent - source.percent}%`;\n\n  return (\n    <Fragment>\n      <div className={classes.track} style={{ left, width }} />\n      <div\n        className={classes.trackHotspot}\n        style={{ left, width }}\n        {...getTrackProps()}\n      />\n    </Fragment>\n  );\n}\n\nMuiTrackComponent.propTypes = {\n  source: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    value: PropTypes.number.isRequired,\n    percent: PropTypes.number.isRequired\n  }).isRequired,\n  target: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    value: PropTypes.number.isRequired,\n    percent: PropTypes.number.isRequired\n  }).isRequired,\n  classes: PropTypes.object.isRequired,\n  getTrackProps: PropTypes.func.isRequired\n};\n\nexport const MuiTrack = withStyles(muiTrackStyle)(MuiTrackComponent);\n\n// *******************************************************\n// TICK COMPONENT\n// *******************************************************\n\nconst muiTickStyle = theme => ({\n  tick: {\n    position: \"absolute\",\n    marginTop: 14,\n    width: 1,\n    height: 5,\n    backgroundColor: theme.palette.grey[400]\n  },\n  label: {\n    position: \"absolute\",\n    marginTop: 22,\n    textAlign: \"center\"\n  }\n});\n\nexport function MuiTickComponent({ classes, tick, count, format }) {\n  return (\n    <div>\n      <div className={classes.tick} style={{ left: `${tick.percent}%` }} />\n      <Typography\n        className={classes.label}\n        variant=\"caption\"\n        style={{\n          marginLeft: `${-(100 / count) / 2}%`,\n          width: `${100 / count}%`,\n          left: `${tick.percent}%`\n        }}\n      >\n        {format(tick.value)}\n      </Typography>\n    </div>\n  );\n}\n\nMuiTickComponent.propTypes = {\n  tick: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    value: PropTypes.number.isRequired,\n    percent: PropTypes.number.isRequired\n  }).isRequired,\n  classes: PropTypes.object.isRequired,\n  count: PropTypes.number.isRequired,\n  format: PropTypes.func.isRequired\n};\n\nMuiTickComponent.defaultProps = {\n  format: d => d\n};\n\nexport const MuiTick = withStyles(muiTickStyle)(MuiTickComponent);\n","import React from \"react\";\nimport { Bar, defaults } from \"react-chartjs-2\";\n\nclass BarChart extends React.Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      // bgColor: this.props.color,\n      isHovering: false,\n      barSelected: null,\n    }\n    this.onLeave = this.onLeave.bind(this)\n    // this.showHideUpdate = this.showHideUpdate.bind(this);\n  }\n  \n\n  calculateHistogram(domain,normalize){\n    // Calculate frequency of data (adapted for float numbers)\n    let data = []\n    for(let i=0;i<this.props.settings[\"total\"];i++){\n      if(this.props.currentProjection[i]===0){\n        data.push(this.props.metadata[i][this.props.sliderID])\n      }\n    }\n    var buckets = {};\n    this.bucketsFinder = {};\n    const bucketCount = 50;\n    var stepSize;\n    if(domain[0] < 0){stepSize = (Math.abs(domain[0]) + Math.abs(domain[1])) / bucketCount}\n    else{stepSize = Math.abs((Math.abs(domain[0]) - Math.abs(domain[1])) / bucketCount)}\n    // Console.log(\"stepSize\", stepSize);\n    for (let i = 0; i < bucketCount; i++) {\n      buckets[i] = 0;\n    }\n    var targetBucket;\n      for (var i = 0; i < data.length; i++) {\n        if (data[i] === domain[1]){targetBucket = bucketCount-1}\n        else {\n          // console.log(data[i])\n          targetBucket = ((data[i] - domain[0]) / stepSize) | 0\n        }\n        buckets[targetBucket] +=1;\n        // if (typeNumber === \"int\")\n        // this.bucketsFinder[parseInt(data[i])] = targetBucket;\n        // else\n        this.bucketsFinder[parseFloat(data[i]).toFixed(1)] = targetBucket;\n      }\n    var bucketList = Object.values(buckets)\n    if (normalize === true){\n      // Normalize data\n      var ratio = Math.max.apply(Math, bucketList) / 50;\n        for (i = 0; i < bucketList.length; i++) {\n          bucketList[i] = Math.round(bucketList[i] / ratio);\n        }\n      }\n    const barDataValues = [];\n    for (let i = 0; i < bucketList.length; i++) {\n      barDataValues.push(bucketList[i] || 0);\n    }\n    // console.log(barDataValues)\n    return barDataValues;\n  }\n\n\n  hoverEffect(chartElement) {\n    this.setState({isHovering: true});\n    if (chartElement[0]) {\n      var barID = chartElement[0].index;\n      var arr = new Float32Array( this.props.settings[\"total\"] ).fill(1);\n      // var arr = !this.props.filterImageAr;\n      var prevArr = this.props.currentProjection;\n      // console.log(this.props.barData[\"selections\"][barID]);?\n      this.props.barData[\"selections\"][barID].forEach(element => {\n        // if (prevArr[element] === 1) {\n          arr[element] = prevArr[element]\n        // }\n        // console.log(this.props.barData[\"selections\"][barID])\n      });\n      this.props.calculateProjection(arr, null, false);\n      this.setState({barSelected: barID});\n    }\n  }\n\n  onLeave() { \n    // this.setState(() => ({isHovering: false}), () => console.log(this.state));\n    this.setState({isHovering: false});\n    this.props.calculateProjection(this.props.currentProjection, null, false)\n  }\n\n  // componentDidUpdate(prevProps) {\n  //   if (this.props.currentProjection !== prevProps.currentProjection) {\n  //     this.barDataIst = this.calculateFrequencyOfData(this.props.domain,this.props.datafilter,false);\n  //   }\n  // }\n\n\n  render() {\n    const { barData, domain, color, selected } = this.props;\n    defaults.animation = false;\n    var markerData = Array(50).fill(0);\n    this.barDataSoll = barData.histogram;\n    this.barDataIst = this.calculateHistogram(domain,false);\n    const barDataCalc = {\n      labels: this.barDataSoll.map((val, i) => i),\n      datasets: [\n        {\n          label: \"barDataIst\",\n          type: 'bar',\n          barThickness: 5,\n          normalized: true,\n          order: 2,\n          backgroundColor: this.state.isHovering ? \"rgb(64, 64, 64)\" : markerData.map((val, i) =>\n            i === this.bucketsFinder[parseFloat(selected).toFixed(1)]\n              ? \"#f50057\"\n              : color\n            ),\n          hoverBackgroundColor: color,\n          // backgroundColor: this.state.bgColor,\n\n          // backgroundColor: this.barDataIst.map((val, i) =>\n          // i === this.bucketsFinder[parseFloat(selected).toFixed(1)]\n          //   ? \"rgb(245, 0, 87)\"\n          //   : this.state.isHovering ? \"rgb(64, 64, 64)\" : color\n          // ),\n          data: this.barDataIst\n          },\n\n          {\n            label: \"barDataSoll\",\n            type: 'bar',\n            barThickness: 5,\n            normalized: true,\n            order: 3,\n            backgroundColor: markerData.map((val, i) =>\n            i === this.bucketsFinder[parseFloat(selected).toFixed(1)]\n              ? \"#542032\"\n              : \"rgb(64, 64, 64)\"\n            ),\n            hoverBackgroundColor: \"rgb(64, 64, 64)\",\n\n          //   backgroundColor: this.barDataIst.map((val, i) =>\n          //   i === this.bucketsFinder[parseFloat(selected).toFixed(1)]\n          //     ? \"rgb(255, 153, 189)\"\n          //     : \"rgb(64, 64, 64)\"\n          // ),\n            // hoverBackgroundColor: \"rgba(255,99,132,0.4)\",\n            data: this.barDataSoll\n          }\n      ]\n    };\n\n    // console.log(\"selected\",this.bucketsFinder[parseFloat(selected).toFixed(1)] );\n    const options = {\n      responsive: true,\n      // pointStyle: 'triangle',\n      interaction: {\n        mode: 'index',\n        intersect: false\n        },\n      events: ['mouseleave', \"mousemove\", \"mouseout\", \"click\"], //, 'touchstart', 'touchmove'],\n      hoverBackgroundColor: color,\n      onClick: () => {\n            this.setState({isHovering: !this.state.isHovering});\n            this.props.calculateProjection(this.props.currentProjection, null, false)\n      },\n      onHover: (event, chartElement) => {\n        if (event.type === \"mousemove\" && this.state.isHovering && this.state.barSelected !== chartElement[0].index) {\n          this.setState({bgColor: \"rgb(64, 64, 64)\"});\n          this.hoverEffect(chartElement)\n          if (event.native.target.style.cursor !== 'ew-resize') {\n            event.native.target.style.cursor = 'ew-resize';\n          }\n        } else if (!this.state.isHovering && event.native.target.style.cursor !== 'pointer') {\n            event.native.target.style.cursor = 'pointer';\n          }\n      // if (this.state.isHovering){\n      //   ReactTooltip.hide(this.fooRef)\n      // }\n      },\n      plugins: {\n        legend: {\n          display: false\n        },\n        tooltip: {\n          enabled: false\n        }\n      },\n      scales: {\n        x: {\n          display: false,\n          stacked: true,\n          // position: 'bottom'\n        },\n        yAxes: {\n          beginAtZero: true,\n          display: false,\n          // stacked: true,\n          // ticks: {\n          //   min: 100\n          // }\n        }\n      }\n    };\n\n\n    return (\n      <Bar data={barDataCalc} height={62} options={options} onMouseLeave={this.onLeave} />\n      );\n  }\n}\n\nexport default React.memo(BarChart);\n","import React from \"react\";\nimport { Grid, TextField, Tooltip, Button } from \"@material-ui/core\";\nimport { Slider, Rail, Handles, Tracks } from \"react-compound-slider\";\nimport { MuiRail, MuiHandle, MuiTrack } from \"./components\";\nimport BarChart from \"./BarChart\";\n\n\nclass RangeSlider extends React.Component {\n  constructor(props) {\n    super(props);\n    let data = props.datafilter;//.filter(() => true);\n    const range = [Math.min.apply(null, data),Math.max.apply(null, data)];\n    this.state = {\n      domain: range,\n      update: range,\n      values: range,\n      inputValues: range,\n      typeNumber: this.props.typeNumber,\n      step:props.step,\n      color:props.color,\n      hover_index: this.props.hover_index,\n      isToggleOn: false,\n    };\n\n    this.changeSlider = this.changeSlider.bind(this);\n    this.currentValues = range;\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(e) {\n    this.setState(prevState => ({\n      isToggleOn: !prevState.isToggleOn\n    }));\n    e.stopPropagation();\n  }\n\n  changeSlider(values) {\n    this.currentValues = values;\n    this.props.onChangeSlider(this.props.title, values);\n  }\n\n\n  render() {\n    const { domain, values, update, inputValues, color, typeNumber } = this.state;\n    return (\n      <Grid container>\n        <Grid item xs={12}>\n          <div style={{ height: \"90px\", width: \"270px\", marginTop: \"12px\"}}>\n            <BarChart\n              update={update}\n              domain={domain}\n              color={color}\n              barData={this.props.barData}\n              calculateProjection={this.props.calculateProjection}\n              settings={this.props.settings}\n              currentProjection={this.props.currentProjection}\n              sliderID={this.props.sliderID}\n              metadata={this.props.metadata}\n              selected={this.props.metadata[this.props.hover_index][this.props.sliderID]}\n\n            />\n            \n            <Slider\n              mode={3}\n              step={typeNumber === \"int\"?1:0.01}\n              domain={domain}\n              color={color}\n              rootStyle={{\n                position: \"relative\",\n                width: \"100%\"\n              }}\n              onUpdate={(update) => {\n                this.setState({ update, inputValues: update });\n              }}\n              onChange={(values) => {\n                this.setState({ values });\n                this.changeSlider(update);\n              }}\n              values={values}\n            >\n              <Rail>\n                {({ getRailProps }) => <MuiRail getRailProps={getRailProps} />}\n              </Rail>\n              <Handles>\n                {({ handles, getHandleProps }) => (\n                  <div className=\"slider-handles\">\n                    {handles.map((handle) => (\n                      <MuiHandle\n                        key={handle.id}\n                        handle={handle}\n                        domain={domain}\n                        getHandleProps={getHandleProps}\n                      />\n                    ))}\n                  </div>\n                )}\n              </Handles>\n              <Tracks left={false} right={false}>\n                {({ tracks, getTrackProps }) => (\n                  <div className=\"slider-tracks\">\n                    {tracks.map(({ id, source, target }) => (\n                      <MuiTrack\n                        key={id}\n                        source={source}\n                        target={target}\n                        getTrackProps={getTrackProps}\n                      />\n                    ))}\n                  </div>\n                )}\n              </Tracks>\n            </Slider>\n            <Grid\n              container\n              alignItems=\"center\"\n              justifyContent=\"space-around\"\n              // style={{ marginTop: \"15px\" }}\n            >\n              <Grid\n                item\n                xs={3}\n                style={{\n                textAlign: \"right\",\n                border: \"solid 1px white\",\n                height:\"20px\",\n                marginLeft: 'auto',\n                marginRight: 'auto',\n                marginTop: 10,\n                }}\n              >\n                <TextField\n                  fullWidth\n                  variant=\"outlined\"\n                  label=\"\"\n                  size=\"small\"\n                  width=\"8px\"\n                  value={inputValues[0]}\n                  margin=\"none\"\n                  inputProps={{\n                    style: {\n                      color:\"white\",\n                      padding: 0,\n                      marginLeft: 2\n                    }\n                  }}\n                  onChange={(evt) => {\n                    const value = evt.target.value;\n                    const newState = [value, inputValues[1]];\n                    this.setState({ inputValues: newState });\n                    if (value && value >= domain[0]) {\n                      this.setState({ values: newState });\n                    }\n                  }}\n                />\n              </Grid>\n              <Grid item xs={4} style={{ textAlign: \"center\",  marginTop:\"6px\"}}>\n\n              <Tooltip title={<h3>{this.props.info}</h3>}>\n              <h3 style={{cursor: \"help\"}}>{this.props.title}</h3>\n              </Tooltip>\n              </Grid>\n              <Grid\n                item\n                xs={3}\n                style={{\n                textAlign: \"right\",\n                border: \"solid 1px white\",\n                height:\"20px\",\n                marginLeft: 'auto',\n                marginRight: 'auto',\n                marginTop: 10,\n                }}\n              >\n                <TextField\n                  fullWidth\n                  variant=\"outlined\"\n                  label=\"\"\n                  size=\"small\"\n                  value={inputValues[1]}\n                  margin=\"none\"\n                  inputProps={{\n                    style: {\n                      color:\"white\",\n                      padding: 0,\n                      marginLeft: 2\n                    }\n                  }}\n                  // style={{ paddingTop: \"2px\", paddingBottom: \"8px\",color: \"white\" }}\n                  onChange={(evt) => {\n                    const value = evt.target.value;\n                    const newState = [inputValues[0], value];\n                    this.setState({ inputValues: newState });\n                    if (value && value <= domain[1] && value >= values[0]) {\n                      this.setState({ values: newState });\n                    }\n                  }}\n                />\n              </Grid>\n            </Grid>\n          </div>\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nexport default React.memo(RangeSlider);\n","import React, { Component } from 'react';\nimport { Grid } from \"@material-ui/core\";\nimport RangeSlider from \"./RangeSlider\";\n//import uuid from 'react-uuid';\n\nclass Sliders extends Component {\n  constructor(props) {\n    super(props);\n\n    this.changeSlider = this.changeSlider.bind(this);\n    // create references for each slider\n    this.slidersAr = []\n    for (let element in this.props.settings.sliders) {\n      this.slidersAr.push( this.props.settings.sliders[element].id );\n    }\n    this.refSliders = {}\n    this.filterData = {}\n    this.filtered = {}\n\n    for(let i=0;i<this.slidersAr.length;i+=1){\n      this.refSliders[this.slidersAr[i]] = React.createRef();\n      // Initial values non filter\n      let filterVals = []\n      for (let element in this.props.metadata) {\n        filterVals.push( this.props.metadata[element][this.slidersAr[i]] );\n      }\n      this.filterData[this.slidersAr[i]] = filterVals\n    }\n    this.state = {\n      datafilter: this.filterData\n    }\n\n  }\n\n  changeSlider(componentName, values) {\n    console.log(componentName, values);\n    let {\n      metadata,\n    } = this.props\n    this.filtered[componentName] = new Float32Array( this.props.settings[\"total\"]).fill(0)\n    let filteredArr = new Float32Array( this.props.settings[\"total\"])\n\n    for(let element in metadata){\n      if(values[0] > metadata[element][componentName] ||\n          values[1] < metadata[element][componentName]\n          ){\n            this.filtered[componentName][element] = 1\n      }\n    }\n    let list = Object.values(this.filtered)\n    let arr = filteredArr.map((x, idx) => list.reduce((max, curr) => max + curr[idx], 0));\n    this.props.calculateProjection(arr, \"filter\", true)\n  }\n\n\n  render() {\n    let {\n      hover_index,\n      settings,\n      barData,\n    } = this.props;\n\n    const slidersSettings = settings['sliders'];\n    const SliderList = slidersSettings.map((slider) =>\n    <Grid item>\n      <RangeSlider\n        ref={this.refSliders[slider['id']]}\n        datafilter={this.state.datafilter[slider['id']]}\n        title={slider['title']}\n        info={slider['info']}\n        typeNumber={slider['typeNumber']}\n        color={slider['color']}\n        onChangeSlider={this.changeSlider}\n        hover_index={hover_index}\n        barData={barData[slider['id']]}\n        calculateProjection={this.props.calculateProjection}\n        currentProjection={this.props.currentProjection}\n        settings={settings}\n        sliderID={slider['id']}\n        metadata={this.props.metadata}\n        />\n      </Grid>\n    )\n\n    return (\n      <Grid container style={{ marginLeft: \"6px\"}}>\n        <Grid item >\n        {SliderList}\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nexport default Sliders\n","import React, { Component } from 'react'\nimport Sliders from \"./Sliders/Sliders\";\n\nclass SliderPane extends Component {\n  constructor(props) {\n    super(props);\n    this.sliderReset = this.sliderReset.bind(this);\n  }\n\n  sliderReset() {\n    console.log(\"reset range sliders\");\n  }\n\n  render() {\n    let {\n      metadata,\n      hover_index,\n    } = this.props;\n\n    return (\n      <Sliders\n        metadata={metadata}\n        settings={this.props.settings}\n        hover_index={hover_index}\n        barData={this.props.barData}\n        filterImageAr={this.props.filterImageAr}\n        calculateProjection={this.props.calculateProjection}\n        currentProjection={this.props.currentProjection}\n      />\n    )\n  }\n}\n\nexport default React.memo(SliderPane)","import React, { Component } from 'react'\nimport  _ from \"lodash\";\nimport { Button, ButtonGroup } from \"@material-ui/core\";\nimport ReactFilterBox, {SimpleResultProcessing, GridDataAutoCompleteHandler} from \"react-filter-box\";\nimport \"./filter-box.css\";\n\n//Extend this class to add your custom operator\nclass CustomAutoComplete extends GridDataAutoCompleteHandler {\n    // Override this method to add new your operator\n    needOperators(parsedCategory) {\n        var result = super.needOperators(parsedCategory);\n        return result.concat([\"startsWith\"]);\n    }\n}\n\nclass CustomResultProcessing extends SimpleResultProcessing {\n    // Override this method to add your handler for startsWith operator\n    filter(row, fieldOrLabel, operator, value){\n        var field = this.tryToGetFieldCategory(fieldOrLabel);\n        switch(operator){\n            case \"==\": return row[field] === value;\n            case \"!=\": return row[field] !== value;\n            case \"contains\": return row[field].toLowerCase().indexOf(value.toLowerCase()) >=0;\n            case \"!contains\": return row[field].toLowerCase().indexOf(value.toLowerCase()) <0;\n            case \"startsWith\": return  _.startsWith(row[field].toLowerCase(), value.toLowerCase() ) ;\n            default: return false;\n        }\n    }\n}\n\nclass Filterbox extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            parseOK: true,\n            query2: {}\n        };\n        this.applyFilter = this.applyFilter.bind(this);\n        this.resetFilter = this.resetFilter.bind(this);\n        this.options = this.props.settings.search;\n        this.customAutoComplete = new CustomAutoComplete(this.props.metadata,this.options);\n        // this.editorConfig = {\n        //     direction: \"rtl\"\n        // };\n    }\n\n    applyFilter() {\n        var newData = new CustomResultProcessing(this.options).process(this.props.metadata, this.state.query2);\n        var arr = new Float32Array(this.props.settings[\"total\"]).fill(1);\n        newData.forEach(element => {\n            arr[element[\"index\"]] = 0;\n        });     \n        this.props.calculateProjection(arr, \"search\", true);\n    }\n\n    resetFilter() {\n        this.setState({ query: null, query2: '' });\n        var arr = new Float32Array(this.props.settings[\"total\"]).fill(0);\n        this.props.calculateProjection(arr, \"search\", true);\n    }\n\n    //customer your rendering item in auto complete\n    customRenderCompletionItem(self, data, pick) {\n        var className = `hint-value cm-${data.type}`\n        return <div className={className} >\n                    <span style={{ fontWeight: \"bold\" }}>{data.value}</span>\n                    <span style={{color:\"gray\", fontSize:10}}> [{data.type}] </span>\n                </div>\n    }\n\n    onParseOk(expressions) {\n        this.setState({ parseOK: false });\n        this.setState({ query2: expressions });\n        // this.applyFilter(expressions);\n    }\n\n    onParseError(expressions) {\n        this.setState({ parseOK: true });\n    }\n    \n    exportMetadata = () => {\n        var filteredMetadata = [];\n        for (let i = 0; i < this.props.metadata.length; i++) {\n          if (this.props.currentProjection[i] === 0) {\n            var obj = this.props.metadata[i];\n            filteredMetadata.push(obj);\n          }\n        }\n        this.setState(\n          { filterDataToExportCSV: filteredMetadata },\n          () => {\n            document.getElementsByClassName('hidden')[0].click();\n          }\n        );\n      };\n      \n\n    render() {\n        return (\n        <div className=\"main-container\">\n            <ReactFilterBox\n                autoCompleteHandler = {this.customAutoComplete}\n                customRenderCompletionItem = {this.customRenderCompletionItem.bind(this) }\n                query={this.state.query}\n                data={this.props.metadata}\n                options={this.options}\n                onParseOk={this.onParseOk.bind(this) }\n                onParseError={this.onParseError.bind(this) }\n                editorConfig={{ lineWrapping: true }}\n            />\n\n            <ButtonGroup variant=\"contained\">\n            <Button onClick={this.applyFilter}>apply</Button>\n            <Button onClick={this.resetFilter}>reset</Button>\n            </ButtonGroup>\n\n        </div>\n        )\n    }\n}\n\nexport default Filterbox","import React, { Component } from 'react'\nimport { Grid } from \"@material-ui/core\";\n//import _ from \"lodash\";\nimport Filterbox from \"./QueryFilter\";\n\nclass FilterPane extends Component {\n\n  render() {\n    let {\n      metadata,\n      settings,\n    } = this.props\n\n    return (\n      <Grid container spacing={2}>\n        <Filterbox \n          calculateProjection={this.props.calculateProjection}\n          settings={settings}\n          metadata={metadata}\n          currentProjection={this.props.currentProjection}\n          allFilter={this.props.allFilter}\n        />\n      </Grid>\n    )\n  }\n}\n\nexport default React.memo(FilterPane)","import React, { Component, Fragment } from 'react'\nimport { Grid } from \"@material-ui/core\";\nimport uuid from 'react-uuid';\n\nclass InfoFields extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    render() {\n        let {\n            metadata,\n            hover_index,\n            infos,\n        } = this.props;\n\n        const InfoList = infos.map((info) => \n            <Fragment>\n                <Grid key={uuid()} item xs={4}>\n                    {info}:\n                </Grid>\n                <Grid key={uuid()} item xs={8}>   \n                    {metadata[hover_index][info]}\n                </Grid>\n            </Fragment>\n        )\n\n        return (\n            <Grid key={uuid()} container justifyContent=\"space-between\" spacing={1} wrap=\"wrap\">    \n                <Grid key={uuid()} item xs={12}>   \n                    <b>{metadata[hover_index].Title}</b>\n                </Grid>\n                {InfoList}\n            </Grid>\n        );\n    }\n}\n\nexport default InfoFields","import React, { Component } from 'react'\nimport InfoFields from \"./InfoFields\";\n\nclass InfoPane extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      dimensions: {},\n    };\n  }\n\n  render() {\n    let {\n      hover_index,\n      infos,\n      metadata,\n    } = this.props;\n\n    return (\n      <InfoFields\n      metadata={metadata}\n      hover_index={hover_index}\n      infos={infos}\n      />\n    )\n\n  }\n}\n\nexport default React.memo(InfoPane)\n","import React, { Component } from 'react'\nimport { Grid, Slider, Box } from \"@material-ui/core\";\n\nclass ViewPane extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      dimensions: {},\n      checked: this.props.filterGrey\n    }\n  }\n\n  handleChange = () => {\n    this.setState(prevState => ({\n      checked: !prevState.checked\n    }));\n    this.props.handleChangeGrey(this.state.checked ? 1 : 0);\n  }\n\n  render() {\n    let {\n      clusters\n    } = this.props\n\n    return (\n      <Grid container spacing={1}>\n        \n          \n          <Grid item xs={4}>\n            clusters:\n          </Grid>\n          <Grid item xs={8}>\n            <select onChange={this.props.handleChangeCluster}>\n              <option key=\"0\" value=\"disabled\">-</option>\n              {clusters['clusterList'].map((option, index) => (\n              <option key={option} value={option}>\n                  {option.toLowerCase()}\n              </option>\n              ))}\n            </select> \n          </Grid>\n          <Grid item xs={4}>\n            size (out):\n          </Grid>\n          <Grid item xs={8}>\n          <Box height={10}>\n          <Slider\n            size=\"small\"\n            defaultValue={this.props.scaleMin}\n            min={3}\n            max={60}\n            onChange={this.props.handleChangeScale}\n          />\n          </Box>\n          </Grid>\n          <Grid item xs={4}>\n          size (in):\n          </Grid>\n          <Grid item xs={8}>\n          <Box height={10}>\n          <Slider\n            size=\"small\"\n            defaultValue={this.props.scaleMax}\n            min={3}\n            max={120}\n            onChange={this.props.handleChangeZoom}\n          />\n          </Box>\n          </Grid>\n\n          <Grid item xs={11}>\n          show filtered-out items (slower):\n          </Grid>\n          <Grid item xs={1}>\n            <input type=\"checkbox\" \n            checked={this.state.checked} \n            onChange={this.handleChange}\n            />\n          </Grid>\n\n      </Grid>\n    )\n  }\n}\n\nexport default React.memo(ViewPane)\n","import React, { Component } from 'react'\nimport { Grid } from \"@material-ui/core\";\n\nclass MappingsPane extends Component {\n  constructor(props) {\n    super(props)\n    this.handleSelectAlgorithm = this.handleSelectAlgorithm.bind(this);\n    this.handleSelectDataset = this.handleSelectDataset.bind(this);\n  }\n\n  handleSelectAlgorithm(e) {\n    let v = e.target.value;\n    this.props.selectAlgorithm(v);\n  }\n\n  handleSelectDataset(e) {\n    let v = e.target.value;\n    this.props.selectDataset(v);\n  }\n\n  render() {\n    let {\n      algorithm_options,\n      algorithm_choice,\n      dataset_options,\n      selectedDataset,\n      datasetInfo\n    } = this.props;\n\n    return (\n      \n      <Grid container spacing={1}>\n          <Grid item xs={4}>\n            Dataset:\n          </Grid>\n          <Grid item xs={8}>\n            <select className=\"full-width\"\n              onChange={this.handleSelectDataset}\n              value={selectedDataset}\n            >\n              {dataset_options.map((option, index) => (\n              <option key={option} value={option}>\n                  {option}\n              </option>\n              ))}\n            </select>\n          </Grid>\n\n          <Grid item xs={4}>\n            Projection:\n          </Grid>\n          <Grid item xs={8}>\n            <select className=\"full-width\"\n              onChange={this.handleSelectAlgorithm}\n              value={algorithm_options[algorithm_choice]}\n            >\n              {algorithm_options.map((option, index) => (\n              <option key={option} value={option}>\n                  {option}\n              </option>\n              ))}\n            </select>\n          </Grid>\n          <Grid item xs={12}>\n          <p className=\"info\">{datasetInfo}</p>\n          </Grid>\n      </Grid>\n    )\n  }\n}\n\nexport default React.memo(MappingsPane)","\nimport React, { Component } from 'react'\nimport { Button } from \"@material-ui/core\";\nimport { CSVLink } from \"react-csv\";\nimport canvasToImage from 'canvas-to-image';\n\n\nclass Export extends Component {\n    constructor(props) {\n      super(props)\n      this.state = {\n        filterDataToExportCSV:[],\n    }\n    }\n\n    makePNG = async () => {\n        console.log('download projection area as png')\n        canvasToImage(document.getElementById(\"threeCanvas\"));\n      }\n\n  \n\nrender() {\n    let {\n        metadata,\n        currentProjection\n      } = this.props;\n\n    return (\n        <><div style={{ marginBottom: \"12px\" }}>\n        <CSVLink \n            data={this.state.filterDataToExportCSV} \n            filename={\"CSN_filtered_metadata.csv\"} \n            target=\"_blank\"\n            onClick={() => {\n            let filteredMetadata = [];\n            for (let i=0;i<metadata.length;i++) {\n                if(currentProjection[i]===0){\n                var obj = metadata[i];\n                filteredMetadata.push(obj)\n                }\n            }\n            this.setState({filterDataToExportCSV: filteredMetadata});\n            }}                \n            >\n            <Button variant=\"contained\" fullWidth >Download metadata CSV</Button>\n            </CSVLink>\n            </div><div>\n                <Button variant=\"contained\" fullWidth onClick={this.makePNG}>Download projection PNG</Button>\n            </div></>\n\n    )\n\n\n}\n  \n    // // Release memory of export filter metadata\n    // if(this.state.filterDataToExportCSV.length>0) this.setState({filterDataToExportCSV: []});\n\n\n}\n\nexport default React.memo(Export)\n\n","import React, { Component } from 'react'\nimport * as THREE from 'three'\nimport * as _ from 'lodash'\nimport * as d3 from 'd3'\nimport * as TWEEN from '@tweenjs/tween.js'\nimport { CircularProgress } from \"@material-ui/core\";\n\nclass Projection extends Component {\n  constructor(props) {\n    super(props)\n    this.loadTiles()\n    this.state = {\n      tilesLoaded: 0,\n      view: null\n    }\n    this.init = this.init.bind(this)\n    this.pointsAr = []\n    this.addPoints = this.addPoints.bind(this)\n    this.handleResize = this.handleResize.bind(this)\n    this.setupCamera = this.setupCamera.bind(this)\n    this.animate = this.animate.bind(this)\n    this.getScaleFromZ = this.getScaleFromZ.bind(this)\n    this.getZFromScale = this.getZFromScale.bind(this)\n    this.changeEmbeddings = this.changeEmbeddings.bind(this)\n  }\n\n  loadTiles(){ \n    this.sprite_size = this.props.settings.sprite_side * this.props.settings.sprite_side\n    this.tile_locations = [...Array(this.props.settings.sprite_number)].map(\n      (n, i) => `${process.env.PUBLIC_URL}/datasets/${this.props.datasetDir}/tile_${i}.png`\n    )  \n    this.datasetIMG = this.tile_locations.map(src => {\n      let img = document.createElement('img')\n      img.src = src\n      return img\n    })\n  }\n\n  //changeEmbeddings(prev_choice, new_choice) {\n  changeEmbeddings(new_choice) {\n    let ranges = []\n    for (let i = 0; i < this.props.settings.sprite_number; i++) {\n      let start = i * this.sprite_size\n      let end = (i + 1) * this.sprite_size\n      if (i === this.props.settings.sprite_number - 1) end = this.props.settings.sprite_number * this.sprite_size\n      ranges.push([start, end])\n    }\n\n    let embedding_chunks = ranges.map(range =>\n      this.props.mappings[new_choice].slice(\n        range[0],\n        range[1]\n      )\n    )\n\n    for (let c = 0; c < this.props.settings.sprite_number; c++) {\n      let echunk = embedding_chunks[c]\n\n      let points = this.scene.children[0].children[c]\n      let numVertices = echunk.length\n\n      let position = points.geometry.attributes.position.array\n      let target = new Float32Array(numVertices * 3)\n      for (let i = 0, index = 0, l = numVertices; i < l; i++, index += 3) {\n        let x = echunk[i][0]\n        let y = echunk[i][1]\n        let z = 0\n        target[index] = x\n        target[index + 1] = y\n        target[index + 2] = z\n      }\n\n      let tween = new TWEEN.Tween(position)\n        .to(target, 1000)\n        .easing(TWEEN.Easing.Linear.None)\n      tween.onUpdate(function() {\n        points.geometry.attributes.position = new THREE.BufferAttribute(\n          position,\n          3\n        )\n        points.geometry.attributes.position.needsUpdate = true // required after the first render\n      })\n      tween.start();\n    }\n  }\n\n  zoomScaler(input) {\n    let scaleProj = d3\n    .scaleLinear()\n    .domain([20,0])\n    .range([this.props.scaleMin, this.props.scaleMax])\n    .clamp(true);\n    return scaleProj(input);\n  }\n\n  getZFromScale(scale) {\n    let rvFOV = THREE.Math.degToRad(this.camera.fov);\n    let scale_height = this.props.height / scale;\n    let camera_z_position = scale_height / (2 * Math.tan(rvFOV / 2));\n    return camera_z_position;\n  }\n\n  getScaleFromZ(camera_z_position) {\n    let rvFOV = THREE.Math.degToRad(this.camera.fov);\n    let half_fov_height = Math.tan(rvFOV / 2) * camera_z_position;\n    let fov_height = half_fov_height * 2;\n    let scale = this.props.height / fov_height;\n    return scale;\n  }\n\n  handleResize = (width, height) => {\n    this.camera.aspect = width / height;\n    this.camera.updateProjectionMatrix();\n    this.renderer.setSize(width, height);\n    let current_scale = this.getScaleFromZ(this.camera.position.z);\n    let d3_x = -(this.camera.position.x * current_scale) + this.props.width / 2;\n    let d3_y = this.camera.position.y * current_scale + this.props.height / 2;\n    var resize_transform = d3.zoomIdentity\n      .translate(d3_x, d3_y)\n      .scale(current_scale);\n    let view = d3.select(this.mount);\n    this.d3_zoom.transform(view, resize_transform);\n  }\n\n  zoomHandler() {\n    let d3_transform = d3.event.transform;\n    let scale = d3_transform.k;\n    let x = -(d3_transform.x - this.props.width / 2) / scale;\n    let y = (d3_transform.y - this.props.height / 2) / scale;\n    let z = this.getZFromScale(scale);\n    this.camera.position.set(x, y, z);\n    // point size scales at end of zoom\n    let new_size = this.zoomScaler(z);\n    let point_group = this.scene.children[0].children;\n    for (let c = 0; c < point_group.length; c++) {\n      point_group[c].material.uniforms.size.value = new_size;\n    }\n  }\n\n  setupCamera() {\n    let { width, height, embeddings_data } = this.props\n\n    let vFOV = this.camera.fov\n    let rvFOV = THREE.Math.degToRad(vFOV)\n\n    let xs = embeddings_data.map(e => e[0])\n    let min_x = _.min(xs)\n    let max_x = _.max(xs)\n    let ys = embeddings_data.map(e => e[1])\n    let min_y = _.min(ys)\n    let max_y = _.max(ys)\n\n    let max_x_from_center = _.max([min_x, max_x].map(m => Math.abs(m)))\n    let max_y_from_center = _.max([min_y, max_y].map(m => Math.abs(m)))\n\n    let max_center = Math.max(max_x_from_center, max_y_from_center)\n\n    let camera_z_start\n    // if (data_aspect > aspect) {\n    //   // console.log(\"width is limiter\");\n    //   // camera_z_start = max_x_from_center / Math.tan(rvFOV / 2) / aspect\n    // } else {\n    //   // console.log(\"height is limiter\");\n    //   // camera_z_start = max_y_from_center / Math.tan(rvFOV / 2)\n    // }\n\n    camera_z_start = max_center / Math.tan(rvFOV / 2)\n\n    let far = camera_z_start * 1.25\n    this.camera.far = far\n    this.camera.position.z = camera_z_start * 1.1\n\n    // set up zoom\n    this.d3_zoom = d3\n      .zoom()\n      .scaleExtent([this.getScaleFromZ(far - 1), this.getScaleFromZ(0.1)])\n      .on('zoom', this.zoomHandler.bind(this))\n\n    let view = d3.select(this.mount)\n    this.view = view\n    view.call(this.d3_zoom)\n    let initial_scale = this.getScaleFromZ(this.camera.position.z)\n    var initial_transform = d3.zoomIdentity\n      .translate(width / 2, height / 2)\n      .scale(initial_scale)\n    this.d3_zoom.transform(view, initial_transform)\n    this.setState({ view: view })\n  }\n\n  addPoints() {\n    let { embeddings_data,metadata } = this.props;\n\n    // split embeddings and labels into chunks to match sprites\n    let ranges = [];\n    for (let i = 0; i < this.props.settings.sprite_number; i++) {\n      let start = i * this.sprite_size;\n      let end = (i + 1) * this.sprite_size;\n      if (i === this.props.settings.sprite_number - 1) end = this.props.settings.sprite_number * this.sprite_size;\n      ranges.push([start, end]);\n    }\n    let embedding_chunks = ranges.map(range =>\n      embeddings_data.slice(range[0], range[1])\n    );\n\n    // load the textures\n    let loader = new THREE.TextureLoader();\n    this.textures = this.tile_locations.map(l => {\n      let t = loader.load(l,\n        function ( w ) {\n          this.setState({ tilesLoaded: this.state.tilesLoaded+1 });\n        }.bind(this)\n      )\n      t.flipY = false\n      t.magFilter = THREE.NearestFilter\n      return t\n    })  \n    let geometry;\n    let point_group = new THREE.Group();\n    for (let c = 0; c < this.props.settings.sprite_number; c++) {\n      let echunk = embedding_chunks[c];\n      //let lchunk = label_chunks[c]\n\n      let vertices = [];\n      for (let v = 0; v < echunk.length; v++) {\n        let embedding = echunk[v];\n        let vert = new THREE.Vector3(embedding[0], embedding[1], 0);\n        vertices[v] = vert;\n      }\n\n      geometry = new THREE.BufferGeometry();\n\n      let numVertices = vertices.length;\n      console.log(\"numVertices -->\",numVertices)\n      let positionAr = new Float32Array(numVertices * 3);\n      let offsetAr = new Float32Array(numVertices * 2);\n      let clusterAr = new Float32Array(numVertices * 3);\n      let filterAr = new Float32Array(numVertices );\n      //let clustersActive = new Float32Array(numVertices );\n      geometry.addAttribute('position', new THREE.BufferAttribute(positionAr, 3));\n      geometry.addAttribute('offset', new THREE.BufferAttribute(offsetAr, 2));\n      geometry.addAttribute('filter', new THREE.BufferAttribute(filterAr, 1));\n      geometry.addAttribute('cluster', new THREE.BufferAttribute(clusterAr, 3));\n      //geometry.addAttribute('clusterActive', new THREE.BufferAttribute(clustersActive, 1));\n\n      for (let i = 0, index = 0, l = numVertices; i < l; i++, index += 3) {\n        let x = echunk[i][0];\n        let y = echunk[i][1];\n        let z = 0;\n        positionAr[index] = x;\n        positionAr[index + 1] = y;\n        positionAr[index + 2] = z;\n      }\n      // geometry.attributes.position.copyVector3sArray(vertices)\n\n      let texture_subsize = 1 / this.props.settings.sprite_side;\n\n      for (let i = 0, index = 0, l = numVertices; i < l; i++, index += 2) {\n        let x = ((i % this.props.settings.sprite_side) * this.props.settings.sprite_image_size) / this.props.settings.sprite_actual_size\n        let y =\n          (Math.floor(i / this.props.settings.sprite_side) * this.props.settings.sprite_image_size) / this.props.settings.sprite_actual_size\n        offsetAr[index] = x;\n        offsetAr[index + 1] = y;\n      }\n      if (this.props.settings.clusters.clusterList) {\n        // Todo: connect cluster the array\n        let clusterSelected = this.props.clusterTypeSelected;\n        let clusterColors = this.props.settings.clusters.clusterColors;\n        console.log(\"clusterSelected\",clusterSelected)\n        for (let i = 0, index = 0, l = numVertices; i < l; i++, index += 1) {\n          // Images disable when are not visible\n          filterAr[index] = 0.0;// default value to show all images\n\n          // Clusters visualization\n\n          if( clusterSelected !== \"-\" && this.props.settings.clusters.clusterList.includes(clusterSelected) ){ \n              let clusterId = metadata[index][clusterSelected];\n              if(clusterId >= clusterColors.length){\n                clusterAr[index*3] = 1.0;\n                clusterAr[index*3 + 1] = 1.0;\n                clusterAr[index*3 + 2] = 1.0;\n              }else{\n                clusterAr[index*3] = clusterColors[clusterId][0];\n                clusterAr[index*3 + 1] = clusterColors[clusterId][1];\n                clusterAr[index*3 + 2] = clusterColors[clusterId][2];\n              }\n          }\n      }\n    }\n      // uniforms\n      let uniforms = {\n        texture: { value: this.textures[c] },\n        repeat: { value: new THREE.Vector2(texture_subsize, texture_subsize) },\n        size: { value: this.props.settings.sprite_image_size },\n        greyTransparency:{ value:0.1},\n        imageTransparency:{ value:1.0},\n        clusterActive:{ value:0.0}\n      };\n\n      let vertex_shader = `\n        attribute vec2 offset;\n        varying vec2 vOffset;\n        attribute vec3 cluster;\n        varying vec3 vCluster;\n        attribute float filteredActive;\n        varying float vFilteredActive;\n        uniform float clusterActive;\n        varying float vClusterActive;\n        uniform float size;\n        uniform float greyTransparency;\n        varying float vGreyTransparency;\n        uniform float imageTransparency;\n        varying float vImageTransparency;\n\n        void main() {\n          vOffset = offset;\n          vFilteredActive = filteredActive;\n          vCluster = cluster;\n          vClusterActive = clusterActive;\n          vGreyTransparency = greyTransparency;\n          vImageTransparency = imageTransparency;\n          gl_PointSize = size;\n          gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n        }`;\n\n      let fragment_shader = `\n        uniform sampler2D texture;\n        uniform vec2 repeat;\n        varying vec2 vOffset;\n        varying vec3 vCluster;\n        varying float vClusterActive;\n        varying float vFilteredActive;\n        varying float vGreyTransparency;\n        varying float vImageTransparency;\n        void main() {\n          vec2 uv = vec2( gl_PointCoord.x, gl_PointCoord.y );\n          vec4 tex = texture2D( texture, uv * repeat + vOffset );\n          // make transparent images\n          if ( tex.a < 0.003 ) discard;\n\n          // Display clusters\n          vec4 replace_color = vec4(vCluster,1.0);\n          vec4 default_border_color = vec4(0.00392156863,0.00392156863,0.00392156863,0.00392156863);\n          vec4 diff = tex - default_border_color;\n          float equality = float(dot(diff,diff) < 0.99 && vClusterActive > 0.9);\n          tex = mix( tex, replace_color, equality);\n           \n          // make transparent images\n          tex = mix( tex,  vec4(0.0,0.0,0.0,0.0), vImageTransparency);\n\n          // Grey images filter our selection \n          vec4 filterout_color = vec4(0.3,0.3,0.3,vGreyTransparency);\n          float filterout_equality = float(vFilteredActive > 0.9);\n          tex = mix( tex, filterout_color, filterout_equality );\n          gl_FragColor = tex; //* vec4(vColor, 1.0);\n        }`;\n\n      // material\n      let material = new THREE.ShaderMaterial({\n        uniforms: uniforms,\n        vertexShader: vertex_shader,\n        fragmentShader: fragment_shader,\n        transparent: true\n      });\n\n      // point cloud\n      let point_cloud = new THREE.Points(geometry, material);\n      point_cloud.userData = { sprite_index: c };\n      this.pointsAr.push(point_cloud);\n      // console.log(\"new points\")\n      point_group.add(point_cloud);\n    }\n    this.scene.add(point_group);\n  }\n\n  addBlankHighlightPoints() {\n    let hover_container = new THREE.Group();\n    this.scene.add(hover_container);\n\n    let vert = new THREE.Vector3(0, 0, 0);\n    let vertices = [vert];\n    let geometry = new THREE.BufferGeometry();\n    let numVertices = vertices.length;\n    var positionAr = new Float32Array(numVertices * 3); // 3 coordinates per point\n    var offsetAr = new Float32Array(numVertices * 2); // 2 coordinates per point\n    geometry.addAttribute('position', new THREE.BufferAttribute(positionAr, 3));\n    geometry.addAttribute('offset', new THREE.BufferAttribute(offsetAr, 2));\n\n    // all the attributes will be filled on hover\n    let texture_subsize = 1 / this.props.settings.sprite_side;\n\n    // uniforms\n    let uniforms = {\n      texture: { value: this.textures[0] },\n      repeat: { value: new THREE.Vector2(texture_subsize, texture_subsize) },\n      size: { value: 84.0 }, //56\n    };\n\n    let vertex_shader = `\n        attribute vec2 offset;\n        varying vec2 vOffset;\n        uniform float size;\n        void main() {\n          vOffset = offset;\n          gl_PointSize = size;\n          gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n        }`;\n\n    let fragment_shader = `\n        uniform sampler2D texture;\n        uniform vec2 repeat;\n        varying vec2 vOffset;\n        void main() {\n          vec2 uv = vec2( gl_PointCoord.x, gl_PointCoord.y );\n          vec4 tex = texture2D( texture, uv * repeat + vOffset );\n          gl_FragColor = tex;\n        }`;\n\n    // material\n    var material = new THREE.ShaderMaterial({\n      uniforms: uniforms,\n      vertexShader: vertex_shader,\n      fragmentShader: fragment_shader,\n      transparent: true,\n    });\n\n    let point = new THREE.Points(geometry, material);\n    point.frustumCulled = false;\n\n    this.scene.children[1].visible = false;\n    this.scene.children[1].add(point);\n  }\n\n  // filter images - update color of images to get inactive (grey) or active images\n  updateProjection=(ar)=>{\n    this.filterAr = ar;\n    let ranges = [];\n    let ar_sliced = [];\n    for (let i = 0; i < this.props.settings.sprite_number; i++) {\n      let start = i * this.sprite_size;\n      let end = (i + 1) * this.sprite_size;\n      if (i === this.props.settings.sprite_number - 1) end = this.props.settings.sprite_number * this.sprite_size;\n      ranges.push([start, end]);\n      ar_sliced.push(ar.slice(start, end));\n    }\n    // \n    for (let c = 0; c < this.props.settings.sprite_number; c++) {\n      let points = this.scene.children[0].children[c];\n      points.geometry.attributes.filteredActive = new THREE.BufferAttribute(\n        ar_sliced[c],\n        1\n      );\n      points.geometry.attributes.filteredActive.needsUpdate = true;\n    }\n    // let point = this.scene.children[0].children[0]\n    // console.log(point.geometry);\n  }\n\n  updatePass2Shader=(num)=>{\n    for (let c = 0; c < this.props.settings.sprite_number; c++) {\n      let points = this.scene.children[0].children[c];\n      if(num===1){\n        points.material.uniforms.greyTransparency.value = 0.1;\n        points.material.uniforms.greyTransparency.needsUpdate = true;\n        points.material.uniforms.imageTransparency.value = 1.0;\n        points.material.uniforms.imageTransparency.needsUpdate = true;\n      }\n      if(num===2){\n        points.material.uniforms.greyTransparency.value = 0.0;\n        points.material.uniforms.greyTransparency.needsUpdate = true;\n        points.material.uniforms.imageTransparency.value = 0.0;\n        points.material.uniforms.imageTransparency.needsUpdate = true;\n      }\n    }\n  }\n\n  updateClusterColors=(clusterSelected)=>{\n    console.log('updateClusterColors',clusterSelected);\n    \n    let numVertices =  this.props.metadata.length;//this.props.settings.sprite_number * this.sprite_size;\n    console.log(\"clusterSelected:\",clusterSelected, \"numVertices Update -->\",numVertices, ' metadata.length:', this.props.metadata.length)\n    let clusters = new Float32Array(numVertices * 3);\n    //let clustersActive = new Float32Array(numVertices );\n    let clusterColors = this.props.settings.clusters.clusterColors;\n    console.log(numVertices,clusterSelected !==\"-\",this.props.settings.total,clusterColors);\n    \n    let ranges = [];\n    // let clustersActiveAr_sliced = [];\n    let clustersAr_sliced = [];\n\n    if( clusterSelected !==\"disabled\" ){\n      for (let i = 0, index = 0, l = numVertices; i < l; i++, index += 1) {\n          let clusterId = this.props.metadata[index][clusterSelected];\n          if(clusterId>=clusterColors.length){\n            clusters[index*3] = 1.0;\n            clusters[index*3 + 1] = 1.0;\n            clusters[index*3 + 2] = 1.0;\n          }else{\n            clusters[index*3] = clusterColors[clusterId][0];\n            clusters[index*3 + 1] = clusterColors[clusterId][1];\n            clusters[index*3 + 2] = clusterColors[clusterId][2];\n          }\n      }\n\n      for (let i = 0; i < this.props.settings.sprite_number; i++) {\n        let start = i * this.sprite_size;\n        let end = (i + 1) * this.sprite_size;\n        if (i === this.props.settings.sprite_number - 1) end = this.props.settings.sprite_number * this.sprite_size;\n        ranges.push([start, end]);\n        clustersAr_sliced.push(clusters.slice(start*3, end*3));\n      }\n    }\n    \n    for (let c = 0; c < this.props.settings.sprite_number; c++) {\n      let points = this.scene.children[0].children[c];\n      if( clusterSelected !==\"disabled\" ){\n        points.geometry.attributes.cluster = new THREE.BufferAttribute(\n          clustersAr_sliced[c],\n          3\n        );\n        points.geometry.attributes.cluster.needsUpdate = true;\n        \n        points.material.uniforms.clusterActive.value = 1.0;\n        points.material.uniforms.clusterActive.needsUpdate = true;\n      }else{\n        points.material.uniforms.clusterActive.value = 0.0;\n        points.material.uniforms.clusterActive.needsUpdate = true;\n      }\n    }\n\n\n  }\n\n  highlightPoint(sprite_index, digit_index, full_index) {    \n    let { algorithm_choice, mappings } = this.props;\n\n    let point = this.scene.children[1].children[0];\n\n    // console.log(mappings[algorithm_choice][full_index]);\n    let embedding = mappings[algorithm_choice][full_index];\n\n    let vert = new THREE.Vector3(embedding[0], embedding[1], 0);\n    let vertices = [vert];\n\n    var offsets = new Float32Array(2); // 2 coordinates per point\n\n    let x = ((digit_index % this.props.settings.sprite_side) * this.props.settings.sprite_image_size) / 2048;\n    let y = (Math.floor(digit_index / this.props.settings.sprite_side) * this.props.settings.sprite_image_size) / 2048;\n    offsets[0] = x;\n    offsets[1] = y;\n\n    point.geometry.attributes.position.copyVector3sArray(vertices);\n    point.geometry.attributes.position.needsUpdate = true; // required after the first render\n    point.geometry.attributes.offset.array = offsets;\n    point.geometry.attributes.offset.needsUpdate = true; // required after the first render\n\n    // need to set attributes on geometry and uniforms on material\n    point.material.uniforms.texture.value = this.textures[sprite_index];\n  }\n\n  removeHighlights() {\n    let highlight_container = this.scene.children[1];\n    let highlights = highlight_container.children;\n    highlight_container.remove(...highlights);\n  }\n\n  checkIntersects(mouse_position) {\n    let { width, height, previewPane_ctx, previewPane_image_size } = this.props;\n\n    function mouseToThree([mouseX, mouseY]) {\n      return new THREE.Vector3(\n        (mouseX / width) * 2 - 1,\n        -(mouseY / height) * 2 + 1,\n        1\n      );\n    }\n\n    function sortIntersectsByDistanceToRay(intersects) {\n      return _.sortBy(intersects, 'distanceToRay');\n    }\n\n    let mouse_vector = mouseToThree(mouse_position);\n    this.raycaster.setFromCamera(mouse_vector, this.camera);\n    this.raycaster.params.Points.threshold = 0.25;\n    let intersects = this.raycaster.intersectObjects(\n      this.scene.children[0].children\n    );\n    if (intersects[0]) {\n      let sorted_intersects = sortIntersectsByDistanceToRay(intersects);\n      let intersect = sorted_intersects[0];\n      let sprite_index = intersect.object.userData.sprite_index;\n      let digit_index = intersect.index;\n      let full_index = sprite_index * this.sprite_size + digit_index;\n      // if filter is null then allow selected all, then when filter is defined only allow visible image to be selected\n      if( this.filterAr===undefined || this.filterAr[full_index]<1.0){\n        this.props.setHoverIndex(full_index);\n        // console.log(full_index)\n        this.highlightPoint(sprite_index, digit_index, full_index);\n        this.scene.children[1].visible = true;\n        previewPane_ctx.clearRect(0, 0,  previewPane_image_size, previewPane_image_size);\n        previewPane_ctx.fillRect(0, 0, previewPane_image_size, previewPane_image_size);\n        previewPane_ctx.fillStyle = \"transparent\";\n        try{\n          previewPane_ctx.drawImage(\n            this.datasetIMG[sprite_index],\n            // source rectangle\n            (digit_index % this.props.settings.sprite_side) * this.props.settings.sprite_image_size,\n            Math.floor(digit_index / this.props.settings.sprite_side) * this.props.settings.sprite_image_size,\n            this.props.settings.sprite_image_size,\n            this.props.settings.sprite_image_size,\n            // destination rectangle\n            0,\n            0,\n            previewPane_image_size,\n            previewPane_image_size\n          );\n        }catch (error){\n          console.log(\"previewPane_ctx.drawImage\",error);\n        }\n      }\n    } else {\n      this.props.setHoverIndex(null);\n      this.scene.children[1].visible = false;\n      previewPane_ctx.fillRect(0, 0, previewPane_image_size, previewPane_image_size);\n      previewPane_ctx.fillStyle = \"transparent\";\n    }\n  }\n\n  handleMouse() {\n    let view = d3.select(this.renderer.domElement);\n    this.raycaster = new THREE.Raycaster();\n\n    view.on('mousemove', () => {\n      let [mouseX, mouseY] = d3.mouse(view.node());\n      let mouse_position = [mouseX, mouseY];\n      this.checkIntersects(mouse_position);\n    })\n    \n    view.on('dblclick', () => {\n      if(this.scene.children[1].visible) this.props.clickOnImage();\n    })\n  }\n\n  init() {\n    let { width, height } = this.props;\n    this.scene = new THREE.Scene();\n    let vFOV = 75;\n    let aspect = width / height;\n    let near = 0.01;\n    let far = 1000;\n\n    this.camera = new THREE.PerspectiveCamera(vFOV, aspect, near, far);\n\n    this.renderer = new THREE.WebGLRenderer({ preserveDrawingBuffer: true,alpha: true });\n    this.renderer.setClearColor(0xffffff, 0);\n    this.renderer.autoClear = false;\n    this.renderer.setSize(width, height);\n    this.renderer.domElement.id = \"threeCanvas\";\n    this.mount.appendChild(this.renderer.domElement);\n\n    this.addPoints();\n    this.addBlankHighlightPoints();\n    this.setupCamera();\n    this.animate();\n    this.handleMouse();\n    this.changeEmbeddings(this.props.algorithm_choice);\n  }\n\n  animate() {\n    requestAnimationFrame(this.animate);\n    TWEEN.update();\n    this.renderer.clear()\n    // 1-Pass :: Render filtered images (grey semi-transparent images that create a shadow behind)\n    if(parseInt(this.props.greyRenderTypeSelected)===0){\n      this.updatePass2Shader(1)\n      this.renderer.render(this.scene, this.camera);\n    }\n    // 2-Pass - Render all images\n    this.updatePass2Shader(2)\n    this.renderer.render(this.scene, this.camera);\n  }\n\n  componentDidMount() {\n    this.init();\n  }\n\n  componentDidUpdate(prevProps) {\n    let { width, height } = this.props;\n    if (width !== prevProps.width || height !== prevProps.height) {\n      this.handleResize(width, height);\n    }\n    \n    if (prevProps.algorithm_choice !== this.props.algorithm_choice) {\n      this.changeEmbeddings(\n        //prevProps.algorithm_choice,\n        this.props.algorithm_choice,\n      );\n    }\n    \n    if (this.props.scaleMin !== prevProps.scaleMin || this.props.scaleMax !== prevProps.scaleMax){\n      this.handleResize(width, height);\n    }\n  }\n\n  componentWillUnmount() {\n    this.mount.removeChild(this.renderer.domElement);\n  }\n\n  render() {\n    let { width, height } = this.props;\n    const tileProgress = this.state.tilesLoaded;\n    const allTiles = this.props.settings.sprite_number;\n    return (\n      <><div>\n        {tileProgress < 1 ? <div className=\"loading\"><CircularProgress color=\"inherit\"/><div>loading tiles...</div></div> : \n        tileProgress < allTiles-1 ? <div className=\"loading-small\"><CircularProgress color=\"inherit\"/><div>loading...</div></div> : \n        ''\n      }\n      </div><div\n          style={{ width: width, height: height, overflow: 'hidden' }}\n          ref={mount => {\n            this.mount = mount\n          } } /></>\n    ) \n  }\n}\n\nexport default React.memo(Projection)\n\n\n","import React, { Component } from 'react'\nimport PreviewPane from './PreviewPane'\nimport SliderPane from './SliderPane'\nimport FilterPane from './FilterPane'\nimport InfoPane from './InfoPane'\nimport ViewPane from './ViewPane'\nimport MappingsPane from './MappingsPane'\nimport Export from './Export'\nimport { ProSidebar, Menu, MenuItem, SubMenu } from 'react-pro-sidebar';\nimport './scss/Menu.scss';\nimport Projection from './Projection'\nimport * as _ from 'lodash'\nimport { CircularProgress } from \"@material-ui/core\";\nimport { FaDatabase, FaSlidersH, FaSearch, FaCloudDownloadAlt, FaAngleDoubleLeft, FaAngleDoubleRight, FaRegImage, FaInfo, FaQuestion, FaEye } from \"react-icons/fa\";\n\nclass Layout extends Component {\n  constructor(props) {\n    super(props)\n    let total = this.props.settings[\"total\"]\n    this.state = {\n      ww: null,\n      wh: null,\n      hover_index: 0,\n      previewPane_height: null,\n      controlPane_height: null,\n      filterPane_height: null,\n      algorithm_choice: null,\n      allFilter: {},\n      currentProjection: new Float32Array(total).fill(0),\n      currentFilter: new Float32Array(total).fill(0),\n      currentSearch: new Float32Array(total).fill(0),\n      scaleMin: 14,\n      scaleMax: 70,\n      filterGrey: true,\n      clusterTypeSelected:'-',\n      greyRenderTypeSelected:0,\n      dimensions: {},\n      collapsedControl: false,\n      collapsedObject: false\n    }\n    this.previewPane_ctx = null;\n    this.setSize = _.debounce(this.setSize.bind(this), 200);\n    this.setPreviewPaneCanvas = this.setPreviewPaneCanvas.bind(this);\n    this.setPreviewImage = this.setPreviewImage.bind(this);\n    this.selectAlgorithm = this.selectAlgorithm.bind(this);\n    this.selectDataset = this.selectDataset.bind(this);\n    this.toggleControl = this.toggleControl.bind(this);\n    this.refProjection = React.createRef();\n  }\n\n  componentDidMount() {\n    this.setDefaults();\n    this.selectAlgorithm(this.props.algorithm_name);\n    this.setSize();\n    window.addEventListener('resize', this.setSize);\n  }\n\n  setDefaults(){\n    if (this.props.settings[\"total\"] < 20000) {\n      this.setState( { scaleMin: 15, filterGrey: true, greyRenderTypeSelected: 0 } )\n    } else {\n      this.setState( { scaleMin: 5, filterGrey: false, greyRenderTypeSelected: 1 } )\n    }\n  }\n\n  setRenderer(renderer){\n    this.setState( { renderer: renderer});\n  }\n\n  handleChangeScale(e,val) {\n    this.setState({ scaleMin: val})\n  }\n\n  handleChangeZoom(e,val) {\n    this.setState({ scaleMax: val})\n  }\n\n  handleChangeCluster(e) {\n    let value = e.target.value;\n    this.setState({ clusterTypeSelected: parseInt(value)})\n    console.log(e.target)\n    try{\n      this.refProjection.current.updateClusterColors(value)\n    } catch(error) {console.log(\"error updateClusterColors\")}\n  }\n\n  handleChangeGrey(value) {\n    this.setState({ greyRenderTypeSelected: value})\n  }\n\n  calculateProjection=(newArr,type, update)=>{\n    let A, B, arr;\n    if(type===\"filter\"){\n      this.setState({currentFilter: newArr})\n      A = newArr;\n      B = this.state.currentSearch;\n    }\n    if(type===\"search\"){\n      this.setState({currentSearch: newArr});\n      A = this.state.currentFilter;\n      B = newArr;\n    }\n    if(update){\n      arr = A.map((x, idx) => x + B[idx]);\n      this.setState({currentProjection: arr});\n    } else {\n      arr = newArr;\n    }\n    try{\n      this.refProjection.current.updateProjection(arr);\n    } catch(error) {}\n    }\n\n  selectAlgorithm(v) {\n    let i = this.props.algorithm_options.indexOf(v);\n    if(i<0) i = 0;\n    this.setState({ algorithm_choice: i });\n    // Save algorithm in URL parameters\n    this.props.addToUrl('projection',this.props.algorithm_options[i]);\n  }\n\n  selectDataset(p) {\n    this.props.changeDataset(p);\n  }\n\n  setSize() {\n    this.setState({ ww: window.innerWidth, wh: window.innerHeight });\n    let previewPane_height = this.previewPane_mount.offsetHeight;\n    this.setState({ previewPane_height: previewPane_height });\n    if (this.previewPane_ctx) this.previewPane_ctx.imageSmoothingEnabled = false;\n    if ( window.innerWidth < 900) {\n      this.setState({ collapsedControl: true, collapsedObject: true })\n    } else {\n      this.setState({ collapsedControl: false, collapsedObject: false })\n\n    }\n  }\n\n  setPreviewPaneCanvas(canvas) {\n    let ctx = canvas.getContext('2d');\n    ctx.imageSmoothingEnabled = false;\n    this.previewPane_ctx = ctx;\n    console.log(ctx);\n  }\n\n  setPreviewImage() {\n      return (\n      <img\n      src={ this.props.settings.url_prefix + this.props.metadata[this.state.hover_index].Filename }\n      alt=\"preview\"\n      style={{\n        verticalAlign: \"middle\",\n      }}\n      />)\n  }\n\n\n  setHoverIndex(hover_index) {\n    if (hover_index){\n      this.setState({ hover_index: hover_index });\n    }\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.setSize);\n  }\n\n  clickOnImage(){\n    console.log(\"open image\",this.state.hover_index);\n    try{\n      let url = this.props.metadata[this.state.hover_index].link_URL\n      window.open(url, '_blank', 'noopener,noreferrer');\n    }catch(err){}\n  }\n\n  toggleControl = () => {\n    this.setState({ collapsedControl: !this.state.collapsedControl \n  })}\n  \n  toggleObject = () => {\n    this.setState({ collapsedObject: !this.state.collapsedObject \n  })}\n\n\n  render() {\n    let {\n      embeddings_data,\n      mappings,\n      algorithm_options,\n      dataset_options,\n      metadata,\n      settings,\n      barData\n    } = this.props;\n\n    let {\n      ww,\n      wh,\n      hover_index,\n      algorithm_choice,\n      currentProjection,\n      allFilter,\n      greyRenderTypeSelected,\n      clusterTypeSelected,\n      collapsedControl,\n      collapsedObject\n    } = this.state;\n\n    let previewPane_ctx = this.previewPane_ctx;\n    \n    let line_height = 1.5;\n\n    let previewPane_style = {\n      position: 'absolute',\n      left: 0,\n      top: 0,\n      // width: 320,\n      height: 'auto',\n      maxHeight: '100vh',\n      overflow: 'auto',\n      background: '#222',\n      zIndex: 8\n    };\n    let controlMenu_style = {\n      position: 'absolute',\n      right: 0,\n      top: 0,\n      // width: 300,\n      // left:ww-350,\n      height: 'auto',\n      maxHeight: '100vh',\n      overflow: 'auto',\n      background: '#222',\n      zIndex: 8\n    };\n\n    let main_style = {\n      position: 'relative',\n      background: '#111',\n      overflow: 'hidden',\n      width: ww, \n      height: wh\n    };\n\n    let previewPane_image_size = '320px';\n    let font_size = 16;\n\n    let grem = font_size * line_height;\n\n    let general_style = {\n      fontSize: font_size,\n      lineHeight: line_height,\n    };\n\n    let displayNumb = 0;\n    for(let i=0;i<settings.total;i++){\n      if(currentProjection[i]===0){\n        displayNumb++;\n      }\n    }\n\n\n    return ww !== null ? (\n      <div style={general_style}>\n        <div\n          style={controlMenu_style}\n          ref={controlMenu_mount => {\n            this.controlMenu_mount = controlMenu_mount\n          }}\n        >\n          <div>\n          <ProSidebar collapsed={collapsedControl}>\n            <Menu iconShape='square'>\n            <MenuItem>\n            <h3></h3>\n            <a className=\"collapseCon\" onClick={this.toggleControl}>{collapsedControl ? < FaAngleDoubleLeft />  : < FaAngleDoubleRight /> }</a>\n            </MenuItem>\n\n              <SubMenu defaultOpen\n              title={collapsedControl ? null : \"Data & Projections\"}  \n              icon={collapsedControl ? < FaDatabase />  : null }\n              >\n              <MenuItem>\n              <MappingsPane\n                grem={grem}\n                algorithm_options={algorithm_options}\n                algorithm_choice={algorithm_choice}\n                selectAlgorithm={this.selectAlgorithm}\n                dataset_options={dataset_options}\n                selectDataset={this.selectDataset}\n                selectedDataset={this.props.selectedDataset}\n                datasetInfo={settings[\"datasetInfo\"]}\n              />\n              </MenuItem>\n              </SubMenu>\n              <SubMenu defaultOpen\n              title={collapsedControl ? null : \"Dimension Filters\"}  \n              icon={collapsedControl ? <FaSlidersH />  : null }\n              >\n\n\n                <MenuItem>\n                <SliderPane\n                grem={grem}\n                metadata={metadata}\n                hover_index={hover_index}\n                settings={settings}\n                barData={barData}\n                calculateProjection={this.calculateProjection}\n                currentProjection={currentProjection}\n                allFilter={allFilter}\n                />\n                </MenuItem>\n                </SubMenu>\n\n                <SubMenu\n                title={collapsedControl ? null : \"Advanced Filters\"}  \n                icon={collapsedControl ? < FaSearch />  : null }\n                >\n\n                <MenuItem>\n                  <FilterPane\n                    grem={grem}\n                    calculateProjection={this.calculateProjection}\n                    hover_index={hover_index}\n                    settings={settings}\n                    metadata={metadata}\n                    currentProjection={currentProjection}\n                    allFilter={allFilter}\n                  />\n                </MenuItem>\n              </SubMenu>\n              <SubMenu\n                title={collapsedControl ? null : \"Export Filtered Data\"}  \n                icon={collapsedControl ? <FaCloudDownloadAlt />  : null }\n                >\n\n              <MenuItem>\n                <Export\n                metadata = {metadata}\n                currentProjection = {currentProjection}\n                />\n              </MenuItem>\n            </SubMenu>\n            </Menu>\n          </ProSidebar>\n          </div>\n        </div>    \n\n        <div\n          style={previewPane_style}\n          ref={previewPane_mount => {\n            this.previewPane_mount = previewPane_mount\n          }}\n        >\n\n        <div>\n          <ProSidebar collapsed={collapsedObject}>\n            <Menu iconShape='square'>   \n            <MenuItem>\n            {collapsedObject ? <h3></h3> : <h3>Collection Space Navigator</h3> }\n            <a className='collapseObj' onClick={this.toggleObject}>{collapsedObject ? < FaAngleDoubleRight />  : < FaAngleDoubleLeft /> }</a>\n            </MenuItem>\n              <SubMenu defaultOpen\n                title={collapsedObject ? null : \"Object Preview\"}  \n                icon={collapsedObject ? <FaRegImage />  : null }\n                >  \n                <PreviewPane\n                  previewPane_image_size={previewPane_image_size}\n                  setPreviewPaneCanvas={this.setPreviewPaneCanvas}\n                  setPreviewImage={this.setPreviewImage}\n                  hover_index={hover_index}\n                />\n              </SubMenu>\n              <SubMenu defaultOpen\n                title={collapsedObject ? null : \"Object Info\"}  \n                icon={collapsedObject ? <FaInfo />  : null }\n                >  \n                <MenuItem>\n                <InfoPane\n                  hover_index={hover_index}\n                  metadata={metadata}\n                  infos={settings.info}\n                />\n                </MenuItem>\n              </SubMenu>\n\n              <SubMenu\n                title={collapsedObject ? null : \"Object Appearance\"}  \n                icon={collapsedObject ? <FaEye />  : null }\n                > \n                <MenuItem>\n                <ViewPane\n                  clusters={settings.clusters}\n                  scaleMin={this.state.scaleMin}\n                  scaleMax={this.state.scaleMax}\n                  filterGrey={this.state.filterGrey}\n                  handleChangeScale = {this.handleChangeScale.bind(this)}\n                  handleChangeZoom = {this.handleChangeZoom.bind(this)}\n                  handleChangeCluster = {this.handleChangeCluster.bind(this)}\n                  handleChangeGrey = {this.handleChangeGrey.bind(this)}\n                  total = {settings.total}\n                />\n                </MenuItem>\n                <MenuItem>\n                <div className='info'>showing {displayNumb} / {settings.total}</div>\n              </MenuItem>\n              </SubMenu>\n\n            <SubMenu\n              title={collapsedObject ? null : 'About'}  \n              icon={collapsedObject ? <FaQuestion />  : null }\n              >         \n              <div className='about'>\n                The Collection Space Navigator (CSN) is an <strong>interactive visualization interface for multidimensional datasets</strong>.\n                It functions as an explorative visualization tool for researching collections and their multidimensional representations. \n                We designed this tool to better understand multidimensional data, its methods, and semantic qualities through spatial navigation and filtering. \n                CSN can be used with any image collection and can be customized for specific research needs. <a href=\"https://github.com/Collection-Space-Navigator/CSN\" target=\"_blank\" rel=\"noreferrer\" ><strong>[more on GitHub...]</strong></a>\n              </div>\n              </SubMenu>\n            </Menu>\n          </ProSidebar>\n          </div>\n        </div>\n        <div style={main_style}>\n          <Projection\n            ref={this.refProjection}\n            width={main_style.width}\n            height={main_style.height}\n            embeddings_data={embeddings_data}\n            mappings={mappings}\n            metadata={metadata}\n            previewPane_ctx={previewPane_ctx}\n            previewPane_image_size={previewPane_image_size}\n            setHoverIndex={this.setHoverIndex.bind(this)}\n            algorithm_choice={algorithm_choice}\n            datasetDir={this.props.datasetDir}\n            clusterTypeSelected={clusterTypeSelected}\n            greyRenderTypeSelected={greyRenderTypeSelected}\n            settings={settings}\n            initPath={this.props.initPath}\n            scaleMin={this.state.scaleMin}\n            scaleMax={this.state.scaleMax}\n            currentProjection={currentProjection}\n            clickOnImage={this.clickOnImage.bind(this)}\n            // tiles={this.tiles}\n          />\n        </div>\n      </div>\n      \n    ) : (\n      <div className=\"loading\"><CircularProgress color=\"inherit\"/><div>loading layout...</div></div>\n    )\n  }\n}\n\nexport default Layout\n\n\n\n","import React, { Component } from 'react'\nimport {useParams, useNavigate} from \"react-router-dom\";\nimport Layout from './Layout'\nimport * as _ from 'lodash'\nimport * as d3 from 'd3'\nimport color from 'color'\n// import * as THREE from 'three'\nimport { CircularProgress } from \"@material-ui/core\";\n\n\nfunction withRouter(Component) {\n  return props => <Component {...props} params={useParams()} navigate={useNavigate()} />;\n}\n\nclass Data extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // tilesLoaded: 0,\n      algorithm_options: null,\n      dataset_options: null,\n      dataset_dirs: null,\n      embeddings_data: null,\n      mappings: null,\n      metadata:null,\n      defaultDataset:null,\n      algorithm_name:0\n    };\n  }\n\n  scaleEmbeddings(embeddings) {\n    let xs = embeddings.map(e => Math.abs(e[0]));\n    let ys = embeddings.map(e => Math.abs(e[1]));\n    let max_x = _.max(xs);\n    let max_y = _.max(ys);\n    let max = Math.max(max_x, max_y);\n    let scale = d3\n      .scaleLinear()\n      .domain([-max, max])\n      .range([-20, 20]);\n    let scaled_embeddings = embeddings.map(e => [scale(e[0]), scale(e[1])]);\n    return scaled_embeddings;\n  }\n  \n  componentDidMount() {\n    // Get parameters from URL and save to settings\n    const queryString = window.location.search;\n    const urlParams = new URLSearchParams(queryString);\n    this.setState({ selectedDataset: urlParams.get('dataset')});\n    if(urlParams.get('projection')!==undefined) this.setState({algorithm_name:urlParams.get('projection')});\n    // Load embeddings\n    this.loadInit('datasets/datasets_config.json')\n  }\n\n  loadConfig(path){\n    this.loadSettings(`datasets/${path}/config.json`);\n    this.loadBarData(`datasets/${path}/barData.json`);\n    this.loadMetadata(`datasets/${path}/metadata.json`);\n  }\n  \n  prepareMappings(ID){\n    let algorithm_options = [];\n    for (let i in this.state.settings.embeddings) {\n      console.log(this.state.settings.embeddings[i].name);\n      algorithm_options[i] = this.state.settings.embeddings[i].name;\n    }\n    this.setState({ algorithm_options: algorithm_options });\n  }\n\n  loadDataset(ID){\n    let mappings = [];\n    const embeddings = this.state.settings.embeddings;\n    for (let i in embeddings) {\n      // console.log(embeddings[i].key);\n      fetch(`${process.env.PUBLIC_URL}/datasets/${this.state.datasetDir}/${embeddings[i].file}`)\n        .then(response => response.json())\n        .then(embeddings_data => {\n          let scaled_embeddings = embeddings_data;\n          // this.scaleEmbeddings(embeddings_data);\n          mappings[i] = scaled_embeddings;\n        }\n        )\n        .then(() => {\n          this.setState({ mappings: mappings, embeddings_data: mappings[0] })\n        })\n  }\n}\n\n  // loadTiles(){ \n  //   const tile_locations = [...Array(this.state.settings.sprite_number)].map(\n  //     (n, i) => `${process.env.PUBLIC_URL}/datasets/${this.state.datasetDir}/tile_${i}.png`\n  //   )\n  //   let loader = new THREE.TextureLoader();\n  //   this.tiles = tile_locations.map(l => {\n  //     let t = loader.load(l,\n  //       function ( texture ) {\n  //         this.setState({ tilesLoaded: this.state.tilesLoaded+1 });\n  //       }.bind(this)\n  //     )\n  //     t.flipY = false\n  //     t.magFilter = THREE.NearestFilter\n  //     return t\n  //   })    \n  // }\n\n\n  addToUrl(paramName,value){\n    const queryString = window.location.search;\n    const urlParams = new URLSearchParams(queryString);\n    urlParams.set(paramName, value);\n    this.props.navigate(\"?\"+urlParams.toString());\n  }\n\n  prepareDatasets(ID){\n    let dataset_options = [];\n    let dataset_dirs = [];\n    for (let i in this.state.settings.embeddings) {\n      console.log(this.state.settings.embeddings[i].name);\n      dataset_options[i] = this.state.settings.embeddings[i].name;\n      dataset_dirs[i] = this.state.settings.embeddings[i].directory;\n    }\n    this.setState({ dataset_options: dataset_options, dataset_dirs: dataset_dirs });\n  }\n\n  changeDataset(choice){\n    this.addToUrl('dataset',choice);\n    let k = this.state.dataset_options.indexOf(choice);\n    let newDataset = this.state.dataset_dirs[k]\n    this.setState({ \n      selectedDataset: choice, \n      datasetDir: newDataset,\n      algorithm_options: null,\n      embeddings_data: null,\n      mappings: null,\n      metadata: null\n    });\n    this.loadConfig(newDataset);\n  }\n\n  loadInit(file){\n    fetch(`${process.env.PUBLIC_URL}/`+file)\n      .then(response => response.json())\n      .then(init =>{\n        let dataset_options = [];\n        let dataset_dirs = [];\n        for (let i in init.data) {\n          console.log(init.data[i].directory);\n          dataset_options[i] = init.data[i].name;\n          dataset_dirs[i] = init.data[i].directory;\n        }\n        this.setState({ dataset_options: dataset_options,dataset_dirs: dataset_dirs});\n        // Select dataset folder from defined in URL parameters\n        if(this.state.selectedDataset===null){\n          this.setState({ selectedDataset: init.data[init.default].name,  datasetDir: init.data[init.default].directory});\n          this.addToUrl('dataset',init.data[init.default].name);\n        }else{\n          let foundInitDataset = false;\n          for (let i in init.data) {\n            if(init.data[i].name===this.state.selectedDataset){\n              this.setState({datasetDir: init.data[i].directory});\n              foundInitDataset = true;\n            } \n          }\n          if(!foundInitDataset) this.setState({ selectedDataset: init.data[init.default].name,  datasetDir: init.data[init.default].directory});\n        }\n      }\n      )\n      .then(()=> \n      this.loadConfig(this.state.datasetDir))\n\n  }\n\n  loadSettings(file){\n    fetch(`${process.env.PUBLIC_URL}/`+file)\n      .then(response => response.json())\n      .then(settings =>{\n        // Convert colors from rgb(255,0,0) to array [1.0,0.0,0.0]\n        try{\n          const floatColorConvertedArr = settings.clusters.clusterColors.map(myColorFunction);\n          function myColorFunction(value) {\n            return [color(value).rgb().array()[0]/255,color(value).rgb().array()[1]/255,color(value).rgb().array()[2]/255];\n          }\n          settings.clusters.clusterColors = floatColorConvertedArr;\n        }catch(error){}\n        // Save settings to \n        this.setState({\n          settings: settings\n        });\n      }\n      )\n      .then(() =>\n      this.prepareMappings(0))\n      .then(()=> \n      this.loadDataset(0))\n      // .then(()=> \n      // this.loadTiles())\n  }\n\n  loadMetadata(file){\n    fetch(`${process.env.PUBLIC_URL}/`+file)\n      .then(response => response.json())\n      .then(metadata =>\n        this.setState({\n          metadata: metadata,\n        })\n      )\n  }\n\n  loadBarData(file){\n    fetch(`${process.env.PUBLIC_URL}/`+file)\n      .then(response => response.json())\n      .then(barData =>\n        this.setState({\n          barData: barData,\n        })\n      )\n  }\n\n\n  render() {\n    return this.state.embeddings_data && this.state.metadata ? (\n\n      <Layout\n        {...this.state}\n        addToUrl={this.addToUrl.bind(this)}\n        algorithm_name={this.state.algorithm_name}\n        algorithm_options={this.state.algorithm_options}\n        dataset_options={this.state.dataset_options}\n        dataset_dirs={this.state.dataset_dirs}\n        changeDataset={this.changeDataset.bind(this)}\n        selectedDataset={this.state.selectedDataset}\n        datasetDir={this.state.datasetDir}\n        // tiles={this.tiles}\n      />\n\n    ) : (\n      <div className=\"loading\" ><CircularProgress color=\"inherit\"/><div>loading datasets... </div></div>\n      \n    )\n  }\n}\n\nexport default withRouter(Data)\n\n","import React from \"react\";\nimport {\n  BrowserRouter, Routes, Route\n} from \"react-router-dom\";\n\n// Area components\nimport './App.css'\nimport WithRouter from './Data'\n\nexport default function App() {\n  \n  return (\n    <BrowserRouter>\n      <Routes>\n        <Route exact path=\"/\" element={<WithRouter/>} />\n        <Route exact path=\"/CSN\" element={<WithRouter/>}/> \n      </Routes>\n    </BrowserRouter>\n  );\n\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}