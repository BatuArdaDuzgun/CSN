{"version":3,"sources":["PreviewPane.js","Sliders/components.js","Sliders/BarChart.js","Sliders/RangeSlider.js","Sliders/Sliders.js","SliderPane.js","QueryFilter.js","FilterPane.js","InfoFields.js","InfoPane.js","ViewPane.js","MappingsPane.js","Projection.js","Layout.js","Data.js","App.js","serviceWorker.js","index.js"],"names":["PreviewPane","props","state","dimensions","imgURL","previewImage","timeoutId","this","setPreviewPaneCanvas","side_canvas","prevProps","hover_index","setState","clearTimeout","setTimeout","previewPane_image_size","width","height","style","position","textAlign","display","verticalAlign","setPreviewImage","ref","Component","React","memo","thumbHeight","MuiRail","withStyles","theme","rail","backgroundColor","palette","grey","pointerEvents","railHotspot","top","cursor","classes","getRailProps","className","MuiHandle","root","secondary","main","marginLeft","marginTop","border","borderRadius","whiteSpace","zIndex","domain","min","max","handle","id","value","percent","getHandleProps","role","left","MuiTrack","track","trackHotspot","source","target","getTrackProps","MuiTickComponent","tick","count","format","Typography","label","variant","defaultProps","d","BarChart","isHovering","barSelected","onLeave","bind","normalize","data","i","settings","currentProjection","push","metadata","sliderID","buckets","bucketsFinder","stepSize","targetBucket","Math","abs","length","bucketCount","parseFloat","toFixed","bucketList","Object","values","ratio","apply","round","barDataValues","chartElement","barID","index","arr","Float32Array","fill","prevArr","barData","forEach","element","calculateProjection","color","selected","defaults","animation","markerData","Array","barDataSoll","histogram","barDataIst","calculateHistogram","barDataCalc","labels","map","val","datasets","type","barThickness","normalized","order","hoverBackgroundColor","options","responsive","interaction","mode","intersect","events","onClick","onHover","event","bgColor","hoverEffect","native","plugins","legend","tooltip","enabled","scales","x","stacked","yAxes","beginAtZero","onMouseLeave","RangeSlider","datafilter","range","update","inputValues","typeNumber","step","isToggleOn","changeSlider","currentValues","handleClick","e","prevState","stopPropagation","onChangeSlider","title","Grid","container","item","xs","rootStyle","onUpdate","onChange","handles","right","tracks","alignItems","justifyContent","marginRight","TextField","fullWidth","size","margin","inputProps","padding","evt","newState","href","textSize","info","Sliders","slidersAr","sliders","refSliders","filterData","filtered","createRef","filterVals","componentName","console","log","filteredArr","list","idx","reduce","curr","SliderList","slider","SliderPane","sliderReset","filterImageAr","CustomAutoComplete","parsedCategory","concat","GridDataAutoCompleteHandler","CustomResultProcessing","row","fieldOrLabel","operator","field","tryToGetFieldCategory","toLowerCase","indexOf","_","startsWith","SimpleResultProcessing","Filterbox","exportMetadata","filteredMetadata","obj","filterDataToExportCSV","document","getElementsByClassName","click","parseOK","query2","applyFilter","resetFilter","search","customAutoComplete","newData","process","query","self","pick","fontWeight","fontSize","expressions","autoCompleteHandler","customRenderCompletionItem","onParseOk","onParseError","editorConfig","lineWrapping","ButtonGroup","Button","FilterPane","spacing","allFilter","InfoFields","InfoList","infos","uuid","wrap","Title","InfoPane","ViewPane","clusters","handleChangeCluster","option","Box","Slider","defaultValue","scaleMin","handleChangeScale","scaleMax","handleChangeZoom","MappingsPane","handleSelectAlgorithm","handleSelectDataset","v","selectAlgorithm","selectDataset","algorithm_options","algorithm_choice","dataset_options","selectedDataset","datasetInfo","Projection","handleResize","camera","aspect","updateProjectionMatrix","renderer","setSize","current_scale","getScaleFromZ","z","d3_x","d3_y","y","resize_transform","d3","translate","scale","view","mount","d3_zoom","transform","updateProjection","ar","filterAr","ranges","ar_sliced","sprite_number","start","sprite_size","end","slice","c","points","scene","children","geometry","attributes","THREE","needsUpdate","updateClusterColors","clusterSelected","numVertices","clustersActive","clusterColors","total","l","clusterId","clustersActiveAr_sliced","clustersAr_sliced","loadTiles","tilesLoaded","init","pointsAr","addPoints","setupCamera","animate","getZFromScale","changeEmbeddings","sprite_side","tile_locations","n","datasetDir","datasetIMG","src","img","createElement","new_choice","embedding_chunks","mappings","echunk","array","tween","TWEEN","to","easing","Linear","None","input","clamp","scaleProj","rvFOV","degToRad","fov","tan","camera_z_position","fov_height","d3_transform","k","set","new_size","zoomScaler","point_group","material","uniforms","camera_z_start","embeddings_data","vFOV","min_x","max_x","ys","min_y","max_y","max_x_from_center","m","max_y_from_center","far","scaleExtent","on","zoomHandler","call","initial_scale","initial_transform","loader","textures","t","load","w","flipY","magFilter","vertices","embedding","vert","positions","offsets","colors","addAttribute","texture_subsize","sprite_image_size","sprite_actual_size","floor","clusterList","clusterTypeSelected","includes","texture","repeat","vertexShader","fragmentShader","transparent","point_cloud","userData","sprite_index","add","hover_container","point","frustumCulled","visible","digit_index","full_index","copyVector3sArray","offset","highlight_container","highlights","remove","mouse_position","previewPane_ctx","mouse_vector","mouseX","mouseY","mouseToThree","raycaster","setFromCamera","params","Points","threshold","intersects","intersectObjects","sorted_intersects","sortIntersectsByDistanceToRay","object","undefined","setHoverIndex","highlightPoint","clearRect","fillRect","fillStyle","drawImage","error","domElement","node","checkIntersects","setClearColor","appendChild","addBlankHighlightPoints","handleMouse","requestAnimationFrame","render","removeChild","tileProgress","allTiles","CircularProgress","overflow","Layout","newArr","A","B","currentFilter","currentSearch","refProjection","current","ww","wh","previewPane_height","controlPane_height","filterPane_height","algorithm_name","window","addEventListener","calcDefaultScale","addToUrl","p","changeDataset","innerWidth","innerHeight","previewPane_mount","offsetHeight","imageSmoothingEnabled","canvas","ctx","getContext","url_prefix","Filename","alt","removeEventListener","previewPane_style","background","flexDirection","main_style","font_size","bottom","scaler","grem","general_style","lineHeight","displayNumb","maxHeight","controlMenu_mount","iconShape","defaultOpen","filename","rel","initPath","Data","dataset_dirs","defaultDataset","embeddings","queryString","location","urlParams","URLSearchParams","get","loadInit","path","loadSettings","loadBarData","loadMetadata","ID","name","fetch","file","then","response","json","scaled_embeddings","paramName","navigate","toString","directory","choice","newDataset","loadConfig","default","foundInitDataset","floatColorConvertedArr","rgb","prepareMappings","loadDataset","withRouter","useParams","useNavigate","App","exact","Boolean","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bd27e616.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nclass PreviewPane extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dimensions: {},\n      imgURL: null,\n      previewImage: false,\n      timeoutId: null\n    };\n    // this.onImgLoad = this.onImgLoad.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.setPreviewPaneCanvas(this.side_canvas);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.hover_index !== prevProps.hover_index) {\n      this.setState({ previewImage: false });\n      clearTimeout(this.state.timeoutId);\n      const timeoutId = setTimeout(() => {\n        this.setState({ previewImage: true });\n      }, 100);\n      this.setState({ timeoutId });\n    }\n  }\n\n  render() {\n    let {\n      previewPane_image_size,\n    } = this.props;\n    const {width, height} = this.state.dimensions;\n    var imgWidth = \"auto\";\n    var imgHeight = \"100%\";\n    if (width >= height) {\n      imgWidth = \"100%\";\n      imgHeight = \"auto\"\n    };\n\n    return (\n      <div>\n      <div style={{position: \"absolute\", width: previewPane_image_size, height: previewPane_image_size, textAlign: \"center\"}}>\n        <span style={{display: \"inline-block\", height: \"100%\", verticalAlign: \"middle\"}}/>\n\n      {this.state.previewImage === true ? this.props.setPreviewImage() : null}\n      \n      </div>\n        <canvas \n          ref={side_canvas => {\n            this.side_canvas = side_canvas\n          }}\n          width={previewPane_image_size}\n          height={previewPane_image_size}\n        />\n      </div>\n    )\n  }\n}\nexport default React.memo(PreviewPane)\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\n// Based on Material Design spec:\n// Styles by https://github.com/RafeSacks\n// https://material.io/design/components/sliders.html#spec\nconst trackHeight = 2;\nconst thumbHeight = 12;\n\n// *******************************************************\n// RAIL COMPONENT\n// *******************************************************\n\nconst muiRailStyle = theme => ({\n  rail: {\n    backgroundColor: theme.palette.grey[400],\n    width: \"100%\",\n    height: trackHeight,\n    position: \"absolute\",\n    pointerEvents: \"none\"\n  },\n  railHotspot: {\n    // backgroundColor: \"green\", // for debugging\n    width: \"100%\",\n    height: thumbHeight * 2, // Invisible hotspot same size as thumb\n    top: thumbHeight * -1,\n    position: \"absolute\",\n    cursor: \"pointer\"\n  }\n});\n\nfunction MuiRailComponent({ classes, getRailProps }) {\n  return (\n    <Fragment>\n      <div className={classes.railHotspot} {...getRailProps()} />\n      <div className={classes.rail} />\n    </Fragment>\n  );\n}\n\nMuiRailComponent.propTypes = {\n  classes: PropTypes.object.isRequired,\n  getRailProps: PropTypes.func.isRequired\n};\n\nexport const MuiRail = withStyles(muiRailStyle)(MuiRailComponent);\n\n// *******************************************************\n// HANDLE COMPONENT\n// *******************************************************\n\nconst muiHandleStyle = theme => ({\n  root: {\n    backgroundColor: theme.palette.secondary.main,\n    marginLeft: thumbHeight * -0.5,\n    marginTop: thumbHeight * -0.5,\n    width: thumbHeight,\n    height: thumbHeight,\n    border: 0,\n    borderRadius: \"50%\", // circle\n    // boxShadow: \"1px 1px 1px 1px rgba(0, 0, 0, 0.2)\",\n    whiteSpace: \"nowrap\", // for child display inline-block to work\n    position: \"absolute\",\n    zIndex: 2,\n    cursor: \"pointer\"\n  }\n});\n\nfunction MuiHandleComponent({\n  domain: [min, max],\n  handle: { id, value, percent },\n  classes,\n  getHandleProps\n}) {\n  return (\n    <div\n      role=\"slider\"\n      aria-valuemin={min}\n      aria-valuemax={max}\n      aria-valuenow={value}\n      className={classes.root}\n      style={{ left: `${percent}%` }}\n      {...getHandleProps(id)}\n    />\n  );\n}\n\nMuiHandleComponent.propTypes = {\n  domain: PropTypes.array.isRequired,\n  handle: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    value: PropTypes.number.isRequired,\n    percent: PropTypes.number.isRequired\n  }).isRequired,\n  classes: PropTypes.object.isRequired,\n  getHandleProps: PropTypes.func.isRequired\n};\n\nexport const MuiHandle = withStyles(muiHandleStyle)(MuiHandleComponent);\n\n// *******************************************************\n// TRACK COMPONENT\n// *******************************************************\n\nconst muiTrackStyle = theme => ({\n  track: {\n    backgroundColor: theme.palette.secondary.main,\n    height: trackHeight,\n    position: \"absolute\",\n    zIndex: 1,\n    pointerEvents: \"none\"\n  },\n  trackHotspot: {\n    // backgroundColor: \"grey\", // for debugging\n    height: thumbHeight, // Invisible hotspot same size as thumb\n    top: thumbHeight * -0.5,\n    position: \"absolute\",\n    cursor: \"pointer\"\n  }\n});\n\nfunction MuiTrackComponent({ classes, source, target, getTrackProps }) {\n  const left = `${source.percent}%`;\n  const width = `${target.percent - source.percent}%`;\n\n  return (\n    <Fragment>\n      <div className={classes.track} style={{ left, width }} />\n      <div\n        className={classes.trackHotspot}\n        style={{ left, width }}\n        {...getTrackProps()}\n      />\n    </Fragment>\n  );\n}\n\nMuiTrackComponent.propTypes = {\n  source: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    value: PropTypes.number.isRequired,\n    percent: PropTypes.number.isRequired\n  }).isRequired,\n  target: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    value: PropTypes.number.isRequired,\n    percent: PropTypes.number.isRequired\n  }).isRequired,\n  classes: PropTypes.object.isRequired,\n  getTrackProps: PropTypes.func.isRequired\n};\n\nexport const MuiTrack = withStyles(muiTrackStyle)(MuiTrackComponent);\n\n// *******************************************************\n// TICK COMPONENT\n// *******************************************************\n\nconst muiTickStyle = theme => ({\n  tick: {\n    position: \"absolute\",\n    marginTop: 14,\n    width: 1,\n    height: 5,\n    backgroundColor: theme.palette.grey[400]\n  },\n  label: {\n    position: \"absolute\",\n    marginTop: 22,\n    textAlign: \"center\"\n  }\n});\n\nexport function MuiTickComponent({ classes, tick, count, format }) {\n  return (\n    <div>\n      <div className={classes.tick} style={{ left: `${tick.percent}%` }} />\n      <Typography\n        className={classes.label}\n        variant=\"caption\"\n        style={{\n          marginLeft: `${-(100 / count) / 2}%`,\n          width: `${100 / count}%`,\n          left: `${tick.percent}%`\n        }}\n      >\n        {format(tick.value)}\n      </Typography>\n    </div>\n  );\n}\n\nMuiTickComponent.propTypes = {\n  tick: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    value: PropTypes.number.isRequired,\n    percent: PropTypes.number.isRequired\n  }).isRequired,\n  classes: PropTypes.object.isRequired,\n  count: PropTypes.number.isRequired,\n  format: PropTypes.func.isRequired\n};\n\nMuiTickComponent.defaultProps = {\n  format: d => d\n};\n\nexport const MuiTick = withStyles(muiTickStyle)(MuiTickComponent);\n","import React from \"react\";\nimport { Bar, defaults } from \"react-chartjs-2\";\n\nclass BarChart extends React.Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      // bgColor: this.props.color,\n      isHovering: false,\n      barSelected: null,\n    }\n    this.onLeave = this.onLeave.bind(this)\n    // this.showHideUpdate = this.showHideUpdate.bind(this);\n  }\n  \n\n  calculateHistogram(domain,normalize){\n    // Calculate frequency of data (adapted for float numbers)\n    let data = []\n    for(let i=0;i<this.props.settings[\"total\"];i++){\n      if(this.props.currentProjection[i]===0){\n        data.push(this.props.metadata[i][this.props.sliderID])\n      }\n    }\n    var buckets = {};\n    this.bucketsFinder = {};\n    const bucketCount = 50;\n    var stepSize;\n    if(domain[0] < 0){stepSize = (Math.abs(domain[0]) + Math.abs(domain[1])) / bucketCount}\n    else{stepSize = Math.abs((Math.abs(domain[0]) - Math.abs(domain[1])) / bucketCount)}\n    // Console.log(\"stepSize\", stepSize);\n    for (let i = 0; i < bucketCount; i++) {\n      buckets[i] = 0;\n    }\n    var targetBucket;\n      for (var i = 0; i < data.length; i++) {\n        if (data[i] === domain[1]){targetBucket = bucketCount-1}\n        else {\n          // console.log(data[i])\n          targetBucket = ((data[i] - domain[0]) / stepSize) | 0\n        }\n        buckets[targetBucket] +=1;\n        // if (typeNumber === \"int\")\n        // this.bucketsFinder[parseInt(data[i])] = targetBucket;\n        // else\n        this.bucketsFinder[parseFloat(data[i]).toFixed(1)] = targetBucket;\n      }\n    var bucketList = Object.values(buckets)\n    if (normalize === true){\n      // Normalize data\n      var ratio = Math.max.apply(Math, bucketList) / 50;\n        for (i = 0; i < bucketList.length; i++) {\n          bucketList[i] = Math.round(bucketList[i] / ratio);\n        }\n      }\n    const barDataValues = [];\n    for (let i = 0; i < bucketList.length; i++) {\n      barDataValues.push(bucketList[i] || 0);\n    }\n    // console.log(barDataValues)\n    return barDataValues;\n  }\n\n\n  hoverEffect(chartElement) {\n    this.setState({isHovering: true});\n    if (chartElement[0]) {\n      var barID = chartElement[0].index;\n      var arr = new Float32Array( this.props.settings[\"total\"] ).fill(1);\n      // var arr = !this.props.filterImageAr;\n      var prevArr = this.props.currentProjection;\n      // console.log(this.props.barData[\"selections\"][barID]);?\n      this.props.barData[\"selections\"][barID].forEach(element => {\n        // if (prevArr[element] === 1) {\n          arr[element] = prevArr[element]\n        // }\n        // console.log(this.props.barData[\"selections\"][barID])\n      });\n      this.props.calculateProjection(arr, null, false);\n      this.setState({barSelected: barID});\n    }\n  }\n\n  onLeave() { \n    // this.setState(() => ({isHovering: false}), () => console.log(this.state));\n    this.setState({isHovering: false});\n    this.props.calculateProjection(this.props.currentProjection, null, false)\n  }\n\n  // componentDidUpdate(prevProps) {\n  //   if (this.props.currentProjection !== prevProps.currentProjection) {\n  //     this.barDataIst = this.calculateFrequencyOfData(this.props.domain,this.props.datafilter,false);\n  //   }\n  // }\n\n\n  render() {\n    const { barData, domain, color, selected } = this.props;\n    defaults.animation = false;\n    var markerData = Array(50).fill(0);\n    this.barDataSoll = barData.histogram;\n    this.barDataIst = this.calculateHistogram(domain,false);\n    const barDataCalc = {\n      labels: this.barDataSoll.map((val, i) => i),\n      datasets: [\n        {\n          label: \"barDataIst\",\n          type: 'bar',\n          barThickness: 5,\n          normalized: true,\n          order: 2,\n          backgroundColor: this.state.isHovering ? \"rgb(64, 64, 64)\" : markerData.map((val, i) =>\n            i === this.bucketsFinder[parseFloat(selected).toFixed(1)]\n              ? \"#f50057\"\n              : color\n            ),\n          hoverBackgroundColor: color,\n          // backgroundColor: this.state.bgColor,\n\n          // backgroundColor: this.barDataIst.map((val, i) =>\n          // i === this.bucketsFinder[parseFloat(selected).toFixed(1)]\n          //   ? \"rgb(245, 0, 87)\"\n          //   : this.state.isHovering ? \"rgb(64, 64, 64)\" : color\n          // ),\n          data: this.barDataIst\n          },\n\n          {\n            label: \"barDataSoll\",\n            type: 'bar',\n            barThickness: 5,\n            normalized: true,\n            order: 3,\n            backgroundColor: markerData.map((val, i) =>\n            i === this.bucketsFinder[parseFloat(selected).toFixed(1)]\n              ? \"#542032\"\n              : \"rgb(64, 64, 64)\"\n            ),\n            hoverBackgroundColor: \"rgb(64, 64, 64)\",\n\n          //   backgroundColor: this.barDataIst.map((val, i) =>\n          //   i === this.bucketsFinder[parseFloat(selected).toFixed(1)]\n          //     ? \"rgb(255, 153, 189)\"\n          //     : \"rgb(64, 64, 64)\"\n          // ),\n            // hoverBackgroundColor: \"rgba(255,99,132,0.4)\",\n            data: this.barDataSoll\n          }\n      ]\n    };\n\n    // console.log(\"selected\",this.bucketsFinder[parseFloat(selected).toFixed(1)] );\n    const options = {\n      responsive: true,\n      // pointStyle: 'triangle',\n      interaction: {\n        mode: 'index',\n        intersect: false\n        },\n      events: ['mouseleave', \"mousemove\", \"mouseout\", \"click\"], //, 'touchstart', 'touchmove'],\n      hoverBackgroundColor: color,\n      onClick: () => {\n            this.setState({isHovering: !this.state.isHovering});\n            this.props.calculateProjection(this.props.currentProjection, null, false)\n      },\n      onHover: (event, chartElement) => {\n        if (event.type === \"mousemove\" && this.state.isHovering && this.state.barSelected !== chartElement[0].index) {\n          this.setState({bgColor: \"rgb(64, 64, 64)\"});\n          this.hoverEffect(chartElement)\n          if (event.native.target.style.cursor !== 'ew-resize') {\n            event.native.target.style.cursor = 'ew-resize';\n          }\n        } else if (!this.state.isHovering && event.native.target.style.cursor !== 'pointer') {\n            event.native.target.style.cursor = 'pointer';\n          }\n      // if (this.state.isHovering){\n      //   ReactTooltip.hide(this.fooRef)\n      // }\n      },\n      plugins: {\n        legend: {\n          display: false\n        },\n        tooltip: {\n          enabled: false\n        }\n      },\n      scales: {\n        x: {\n          display: false,\n          stacked: true,\n          // position: 'bottom'\n        },\n        yAxes: {\n          beginAtZero: true,\n          display: false,\n          // stacked: true,\n          // ticks: {\n          //   min: 100\n          // }\n        }\n      }\n    };\n\n\n    return (\n      <Bar data={barDataCalc} height={62} options={options} onMouseLeave={this.onLeave} />\n      );\n  }\n}\n\nexport default React.memo(BarChart);\n","import React from \"react\";\nimport { Grid, TextField } from \"@material-ui/core\";\nimport { Slider, Rail, Handles, Tracks } from \"react-compound-slider\";\nimport { MuiRail, MuiHandle, MuiTrack } from \"./components\";\nimport BarChart from \"./BarChart\";\n\n\nclass RangeSlider extends React.Component {\n  constructor(props) {\n    super(props);\n    let data = props.datafilter;//.filter(() => true);\n    const range = [Math.min.apply(null, data),Math.max.apply(null, data)];\n    this.state = {\n      domain: range,\n      update: range,\n      values: range,\n      inputValues: range,\n      typeNumber: this.props.typeNumber,\n      step:props.step,\n      color:props.color,\n      hover_index: this.props.hover_index,\n      isToggleOn: false,\n    };\n\n    this.changeSlider = this.changeSlider.bind(this);\n    this.currentValues = range;\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(e) {\n    this.setState(prevState => ({\n      isToggleOn: !prevState.isToggleOn\n    }));\n    e.stopPropagation();\n  }\n\n  changeSlider(values) {\n    this.currentValues = values;\n    this.props.onChangeSlider(this.props.title, values);\n  }\n\n\n  render() {\n    const { domain, values, update, inputValues, color, typeNumber } = this.state;\n    return (\n      <Grid container>\n        <Grid item xs={12}>\n          <div style={{ height: \"90px\", width: \"270px\", marginTop: \"12px\"}}>\n            <BarChart\n              update={update}\n              domain={domain}\n              color={color}\n              barData={this.props.barData}\n              calculateProjection={this.props.calculateProjection}\n              settings={this.props.settings}\n              currentProjection={this.props.currentProjection}\n              sliderID={this.props.sliderID}\n              metadata={this.props.metadata}\n              selected={this.props.metadata[this.props.hover_index][this.props.sliderID]}\n\n            />\n            \n            <Slider\n              mode={3}\n              step={typeNumber === \"int\"?1:0.01}\n              domain={domain}\n              color={color}\n              rootStyle={{\n                position: \"relative\",\n                width: \"100%\"\n              }}\n              onUpdate={(update) => {\n                this.setState({ update, inputValues: update });\n              }}\n              onChange={(values) => {\n                this.setState({ values });\n                this.changeSlider(update);\n              }}\n              values={values}\n            >\n              <Rail>\n                {({ getRailProps }) => <MuiRail getRailProps={getRailProps} />}\n              </Rail>\n              <Handles>\n                {({ handles, getHandleProps }) => (\n                  <div className=\"slider-handles\">\n                    {handles.map((handle) => (\n                      <MuiHandle\n                        key={handle.id}\n                        handle={handle}\n                        domain={domain}\n                        getHandleProps={getHandleProps}\n                      />\n                    ))}\n                  </div>\n                )}\n              </Handles>\n              <Tracks left={false} right={false}>\n                {({ tracks, getTrackProps }) => (\n                  <div className=\"slider-tracks\">\n                    {tracks.map(({ id, source, target }) => (\n                      <MuiTrack\n                        key={id}\n                        source={source}\n                        target={target}\n                        getTrackProps={getTrackProps}\n                      />\n                    ))}\n                  </div>\n                )}\n              </Tracks>\n            </Slider>\n            <Grid\n              container\n              alignItems=\"center\"\n              justifyContent=\"space-around\"\n              // style={{ marginTop: \"15px\" }}\n            >\n              <Grid\n                item\n                xs={4}\n                style={{\n                textAlign: \"right\",\n                border: \"solid 1px white\",\n                height:\"20px\",\n                marginLeft: 'auto',\n                marginRight: 'auto',\n                marginTop: 10,\n                }}\n              >\n                <TextField\n\n                  fullWidth\n                  variant=\"outlined\"\n                  label=\"\"\n                  size=\"small\"\n                  value={inputValues[0]}\n                  margin=\"none\"\n                  inputProps={{\n                    style: {\n                      color:\"white\",\n                      padding: 0,\n                      marginLeft: 2\n                    }\n                  }}\n                  onChange={(evt) => {\n                    const value = evt.target.value;\n                    const newState = [value, inputValues[1]];\n                    this.setState({ inputValues: newState });\n                    if (value && value >= domain[0]) {\n                      this.setState({ values: newState });\n                    }\n                  }}\n                />\n              </Grid>\n              <Grid item xs={4} style={{ textAlign: \"center\",  marginTop:\"6px\"}}>\n              <div className=\"tooltip\">\n              <button onClick={this.handleClick}>\n                <a href=\"#\"\n                style={{\n                  color: \"#00cc55\",\n                  cursor: \"help\",\n                  textSize:\"8px\"\n                }}>\n                  {this.state.isToggleOn ? \"close\" : this.props.title}\n                </a>\n            </button>\n            {this.state.isToggleOn ? <span className=\"tooltiptext\">{this.props.info}</span> : null}\n                \n              </div>\n              </Grid>\n              <Grid\n                item\n                xs={4}\n                style={{\n                textAlign: \"right\",\n                border: \"solid 1px white\",\n                height:\"20px\",\n                marginLeft: 'auto',\n                marginRight: 'auto',\n                marginTop: 10,\n                }}\n              >\n                <TextField\n                  fullWidth\n                  variant=\"outlined\"\n                  label=\"\"\n                  size=\"small\"\n                  value={inputValues[1]}\n                  margin=\"none\"\n                  inputProps={{\n                    style: {\n                      color:\"white\",\n                      padding: 0,\n                      marginLeft: 2\n                    }\n                  }}\n                  // style={{ paddingTop: \"2px\", paddingBottom: \"8px\",color: \"white\" }}\n                  onChange={(evt) => {\n                    const value = evt.target.value;\n                    const newState = [inputValues[0], value];\n                    this.setState({ inputValues: newState });\n                    if (value && value <= domain[1] && value >= values[0]) {\n                      this.setState({ values: newState });\n                    }\n                  }}\n                />\n              </Grid>\n            </Grid>\n          </div>\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nexport default React.memo(RangeSlider);\n","import React, { Component } from 'react';\nimport { Grid } from \"@material-ui/core\";\nimport RangeSlider from \"./RangeSlider\";\n//import uuid from 'react-uuid';\n\nclass Sliders extends Component {\n  constructor(props) {\n    super(props);\n\n    this.changeSlider = this.changeSlider.bind(this);\n    // create references for each slider\n    this.slidersAr = []\n    for (let element in this.props.settings.sliders) {\n      this.slidersAr.push( this.props.settings.sliders[element].id );\n    }\n    this.refSliders = {}\n    this.filterData = {}\n    this.filtered = {}\n\n    for(let i=0;i<this.slidersAr.length;i+=1){\n      this.refSliders[this.slidersAr[i]] = React.createRef();\n      // Initial values non filter\n      let filterVals = []\n      for (let element in this.props.metadata) {\n        filterVals.push( this.props.metadata[element][this.slidersAr[i]] );\n      }\n      this.filterData[this.slidersAr[i]] = filterVals\n    }\n    this.state = {\n      datafilter: this.filterData\n    }\n\n  }\n\n  changeSlider(componentName, values) {\n    console.log(componentName, values);\n    let {\n      metadata,\n    } = this.props\n    this.filtered[componentName] = new Float32Array( this.props.settings[\"total\"]).fill(0)\n    let filteredArr = new Float32Array( this.props.settings[\"total\"])\n\n    for(let element in metadata){\n      if(values[0] > metadata[element][componentName] ||\n          values[1] < metadata[element][componentName]\n          ){\n            this.filtered[componentName][element] = 1\n      }\n    }\n    let list = Object.values(this.filtered)\n    let arr = filteredArr.map((x, idx) => list.reduce((max, curr) => max + curr[idx], 0));\n    this.props.calculateProjection(arr, \"filter\", true)\n  }\n\n\n  render() {\n    let {\n      hover_index,\n      settings,\n      barData,\n    } = this.props;\n\n    const slidersSettings = settings['sliders'];\n    const SliderList = slidersSettings.map((slider) =>\n    <Grid item>\n      <RangeSlider\n        ref={this.refSliders[slider['id']]}\n        datafilter={this.state.datafilter[slider['id']]}\n        title={slider['title']}\n        info={slider['info']}\n        typeNumber={slider['typeNumber']}\n        color={slider['color']}\n        onChangeSlider={this.changeSlider}\n        hover_index={hover_index}\n        barData={barData[slider['id']]}\n        calculateProjection={this.props.calculateProjection}\n        currentProjection={this.props.currentProjection}\n        settings={settings}\n        sliderID={slider['id']}\n        metadata={this.props.metadata}\n        />\n      </Grid>\n    )\n\n    return (\n      <Grid container style={{ marginLeft: \"6px\"}}>\n        <Grid item >\n        {SliderList}\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nexport default Sliders\n","import React, { Component } from 'react'\nimport Sliders from \"./Sliders/Sliders\";\n\nclass SliderPane extends Component {\n  constructor(props) {\n    super(props);\n    this.sliderReset = this.sliderReset.bind(this);\n  }\n\n  sliderReset() {\n    console.log(\"reset range sliders\");\n  }\n\n  render() {\n    let {\n      metadata,\n      hover_index,\n    } = this.props;\n\n    return (\n      <Sliders\n        metadata={metadata}\n        settings={this.props.settings}\n        hover_index={hover_index}\n        barData={this.props.barData}\n        filterImageAr={this.props.filterImageAr}\n        calculateProjection={this.props.calculateProjection}\n        currentProjection={this.props.currentProjection}\n      />\n    )\n  }\n}\n\nexport default React.memo(SliderPane)","import React, { Component } from 'react'\nimport  _ from \"lodash\";\nimport { Button, ButtonGroup } from \"@material-ui/core\";\nimport ReactFilterBox, {SimpleResultProcessing, GridDataAutoCompleteHandler} from \"react-filter-box\";\nimport \"./filter-box.css\";\n\n//Extend this class to add your custom operator\nclass CustomAutoComplete extends GridDataAutoCompleteHandler {\n    // Override this method to add new your operator\n    needOperators(parsedCategory) {\n        var result = super.needOperators(parsedCategory);\n        return result.concat([\"startsWith\"]);\n    }\n}\n\nclass CustomResultProcessing extends SimpleResultProcessing {\n    // Override this method to add your handler for startsWith operator\n    filter(row, fieldOrLabel, operator, value){\n        var field = this.tryToGetFieldCategory(fieldOrLabel);\n        switch(operator){\n            case \"==\": return row[field] === value;\n            case \"!=\": return row[field] !== value;\n            case \"contains\": return row[field].toLowerCase().indexOf(value.toLowerCase()) >=0;\n            case \"!contains\": return row[field].toLowerCase().indexOf(value.toLowerCase()) <0;\n            case \"startsWith\": return  _.startsWith(row[field].toLowerCase(), value.toLowerCase() ) ;\n            default: return false;\n        }\n    }\n}\n\nclass Filterbox extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            parseOK: true,\n            query2: {}\n        };\n        this.applyFilter = this.applyFilter.bind(this);\n        this.resetFilter = this.resetFilter.bind(this);\n        this.options = this.props.settings.search;\n        this.customAutoComplete = new CustomAutoComplete(this.props.metadata,this.options);\n        // this.editorConfig = {\n        //     direction: \"rtl\"\n        // };\n    }\n\n    applyFilter() {\n        var newData = new CustomResultProcessing(this.options).process(this.props.metadata, this.state.query2);\n        var arr = new Float32Array(this.props.settings[\"total\"]).fill(1);\n        newData.forEach(element => {\n            arr[element[\"index\"]] = 0;\n        });     \n        this.props.calculateProjection(arr, \"search\", true);\n    }\n\n    resetFilter() {\n        this.setState({ query: null, query2: '' });\n        var arr = new Float32Array(this.props.settings[\"total\"]).fill(0);\n        this.props.calculateProjection(arr, \"search\", true);\n    }\n\n    //customer your rendering item in auto complete\n    customRenderCompletionItem(self, data, pick) {\n        var className = `hint-value cm-${data.type}`\n        return <div className={className} >\n                    <span style={{ fontWeight: \"bold\" }}>{data.value}</span>\n                    <span style={{color:\"gray\", fontSize:10}}> [{data.type}] </span>\n                </div>\n    }\n\n    onParseOk(expressions) {\n        this.setState({ parseOK: false });\n        this.setState({ query2: expressions });\n        // this.applyFilter(expressions);\n    }\n\n    onParseError(expressions) {\n        this.setState({ parseOK: true });\n    }\n    \n    exportMetadata = () => {\n        var filteredMetadata = [];\n        for (let i = 0; i < this.props.metadata.length; i++) {\n          if (this.props.currentProjection[i] === 0) {\n            var obj = this.props.metadata[i];\n            filteredMetadata.push(obj);\n          }\n        }\n        this.setState(\n          { filterDataToExportCSV: filteredMetadata },\n          () => {\n            document.getElementsByClassName('hidden')[0].click();\n          }\n        );\n      };\n      \n\n    render() {\n        return (\n        <div className=\"main-container\">\n            <ReactFilterBox\n                autoCompleteHandler = {this.customAutoComplete}\n                customRenderCompletionItem = {this.customRenderCompletionItem.bind(this) }\n                query={this.state.query}\n                data={this.props.metadata}\n                options={this.options}\n                onParseOk={this.onParseOk.bind(this) }\n                onParseError={this.onParseError.bind(this) }\n                editorConfig={{ lineWrapping: true }}\n            />\n\n            <ButtonGroup variant=\"contained\">\n            <Button onClick={this.applyFilter}>apply</Button>\n            <Button onClick={this.resetFilter}>reset</Button>\n            </ButtonGroup>\n\n        </div>\n        )\n    }\n}\n\nexport default Filterbox","import React, { Component } from 'react'\nimport { Grid } from \"@material-ui/core\";\n//import _ from \"lodash\";\nimport Filterbox from \"./QueryFilter\";\n\nclass FilterPane extends Component {\n\n  render() {\n    let {\n      metadata,\n      settings,\n    } = this.props\n\n    return (\n      <Grid container spacing={2}>\n        <Filterbox \n          calculateProjection={this.props.calculateProjection}\n          settings={settings}\n          metadata={metadata}\n          currentProjection={this.props.currentProjection}\n          allFilter={this.props.allFilter}\n        />\n      </Grid>\n    )\n  }\n}\n\nexport default React.memo(FilterPane)","import React, { Component, Fragment } from 'react'\nimport { Grid } from \"@material-ui/core\";\nimport uuid from 'react-uuid';\n\nclass InfoFields extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    render() {\n        let {\n            metadata,\n            hover_index,\n            infos,\n        } = this.props;\n\n        const InfoList = infos.map((info) => \n            <Fragment>\n                <Grid key={uuid()} item xs={4}>\n                    {info}:\n                </Grid>\n                <Grid key={uuid()} item xs={8}>   \n                    {metadata[hover_index][info]}\n                </Grid>\n            </Fragment>\n        )\n\n        return (\n            <Grid key={uuid()} container justifyContent=\"space-between\" spacing={1} wrap=\"wrap\">    \n                <Grid key={uuid()} item xs={12}>   \n                    <b>{metadata[hover_index].Title}</b>\n                </Grid>\n                {InfoList}\n            </Grid>\n        );\n    }\n}\n\nexport default InfoFields","import React, { Component } from 'react'\nimport InfoFields from \"./InfoFields\";\n\nclass InfoPane extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      dimensions: {},\n    };\n  }\n\n  render() {\n    let {\n      hover_index,\n      infos,\n      metadata,\n    } = this.props;\n\n    return (\n      <InfoFields\n      metadata={metadata}\n      hover_index={hover_index}\n      infos={infos}\n      />\n    )\n\n  }\n}\n\nexport default React.memo(InfoPane)\n","import React, { Component } from 'react'\nimport { Grid, Slider,Box } from \"@material-ui/core\";\n\nclass ViewPane extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      dimensions: {}\n    }\n  }\n\n  render() {\n    let {\n      clusters\n    } = this.props\n\n    return (\n      <Grid container spacing={1}>\n          <Grid item xs={4}>\n            clusters:\n          </Grid>\n          <Grid item xs={8}>\n            <select onChange={this.props.handleChangeCluster}>\n            <option key=\"0\" value=\"0\">-</option>\n              {clusters['clusterList'].map((option, index) => (\n              <option key={option} value={option}>\n                  {option}\n            </option>\n              ))}\n            </select> \n          </Grid>\n          <Grid item xs={4}>\n            size (out):\n          </Grid>\n          <Grid item xs={8}>\n          <Box height={10}>\n          <Slider\n            size=\"small\"\n            defaultValue={this.props.scaleMin}\n            min={3}\n            max={60}\n            onChange={this.props.handleChangeScale}\n          />\n          </Box>\n          </Grid>\n          <Grid item xs={4}>\n          size (in):\n          </Grid>\n          <Grid item xs={8}>\n          <Box height={10}>\n          <Slider\n            size=\"small\"\n            defaultValue={this.props.scaleMax}\n            min={3}\n            max={120}\n            onChange={this.props.handleChangeZoom}\n          />\n          </Box>\n          </Grid>\n      </Grid>\n    )\n  }\n}\n\nexport default React.memo(ViewPane)\n","import React, { Component } from 'react'\nimport { Grid } from \"@material-ui/core\";\n\nclass MappingsPane extends Component {\n  constructor(props) {\n    super(props)\n    this.handleSelectAlgorithm = this.handleSelectAlgorithm.bind(this);\n    this.handleSelectDataset = this.handleSelectDataset.bind(this);\n  }\n\n  handleSelectAlgorithm(e) {\n    let v = e.target.value;\n    this.props.selectAlgorithm(v);\n  }\n\n  handleSelectDataset(e) {\n    let v = e.target.value;\n    this.props.selectDataset(v);\n  }\n\n  render() {\n    let {\n      algorithm_options,\n      algorithm_choice,\n      dataset_options,\n      selectedDataset,\n      datasetInfo\n    } = this.props;\n\n    return (\n      \n      <Grid container spacing={1}>\n          <Grid item xs={4}>\n            Dataset:\n          </Grid>\n          <Grid item xs={8}>\n            <select className=\"full-width\"\n              onChange={this.handleSelectDataset}\n              value={selectedDataset}\n            >\n              {dataset_options.map((option, index) => (\n              <option key={option} value={option}>\n                  {option}\n              </option>\n              ))}\n            </select>\n          </Grid>\n\n          <Grid item xs={4}>\n            Projection:\n          </Grid>\n          <Grid item xs={8}>\n            <select className=\"full-width\"\n              onChange={this.handleSelectAlgorithm}\n              value={algorithm_options[algorithm_choice]}\n            >\n              {algorithm_options.map((option, index) => (\n              <option key={option} value={option}>\n                  {option}\n              </option>\n              ))}\n            </select>\n          </Grid>\n          <Grid item xs={12}>\n          <p className=\"info\">{datasetInfo}</p>\n          </Grid>\n      </Grid>\n    )\n  }\n}\n\nexport default React.memo(MappingsPane)","import React, { Component } from 'react'\nimport * as THREE from 'three'\nimport * as _ from 'lodash'\nimport * as d3 from 'd3'\nimport * as TWEEN from '@tweenjs/tween.js'\nimport { CircularProgress } from \"@material-ui/core\";\n\nclass Projection extends Component {\n  constructor(props) {\n    super(props)\n    this.loadTiles()\n    this.state = {\n      tilesLoaded: 0,\n      view: null\n    }\n    this.init = this.init.bind(this)\n    this.pointsAr = []\n    this.addPoints = this.addPoints.bind(this)\n    this.handleResize = this.handleResize.bind(this)\n    this.setupCamera = this.setupCamera.bind(this)\n    this.animate = this.animate.bind(this)\n    this.getScaleFromZ = this.getScaleFromZ.bind(this)\n    this.getZFromScale = this.getZFromScale.bind(this)\n    this.changeEmbeddings = this.changeEmbeddings.bind(this)\n\n   \n  }\n\n\n  loadTiles(){ \n    this.sprite_size = this.props.settings.sprite_side * this.props.settings.sprite_side\n    this.tile_locations = [...Array(this.props.settings.sprite_number)].map(\n      (n, i) => `${process.env.PUBLIC_URL}/datasets/${this.props.datasetDir}/tile_${i}.png`\n    )  \n    this.datasetIMG = this.tile_locations.map(src => {\n      let img = document.createElement('img')\n      img.src = src\n      return img\n    })\n  }\n\n\n  //changeEmbeddings(prev_choice, new_choice) {\n  changeEmbeddings(new_choice) {\n    let ranges = []\n    for (let i = 0; i < this.props.settings.sprite_number; i++) {\n      let start = i * this.sprite_size\n      let end = (i + 1) * this.sprite_size\n      if (i === this.props.settings.sprite_number - 1) end = this.props.settings.sprite_number * this.sprite_size\n      ranges.push([start, end])\n    }\n\n    let embedding_chunks = ranges.map(range =>\n      this.props.mappings[new_choice].slice(\n        range[0],\n        range[1]\n      )\n    )\n\n    for (let c = 0; c < this.props.settings.sprite_number; c++) {\n      let echunk = embedding_chunks[c]\n\n      let points = this.scene.children[0].children[c]\n      let numVertices = echunk.length\n\n      let position = points.geometry.attributes.position.array\n      let target = new Float32Array(numVertices * 3)\n      for (let i = 0, index = 0, l = numVertices; i < l; i++, index += 3) {\n        let x = echunk[i][0]\n        let y = echunk[i][1]\n        let z = 0\n        target[index] = x\n        target[index + 1] = y\n        target[index + 2] = z\n      }\n\n      let tween = new TWEEN.Tween(position)\n        .to(target, 1000)\n        .easing(TWEEN.Easing.Linear.None)\n      tween.onUpdate(function() {\n        points.geometry.attributes.position = new THREE.BufferAttribute(\n          position,\n          3\n        )\n        points.geometry.attributes.position.needsUpdate = true // required after the first render\n      })\n      tween.start();\n    }\n  }\n\n  zoomScaler(input) {\n    let scaleProj = d3\n    .scaleLinear()\n    .domain([20,0])\n    .range([this.props.scaleMin, this.props.scaleMax])\n    .clamp(true);\n    return scaleProj(input);\n  }\n\n  getZFromScale(scale) {\n    let rvFOV = THREE.Math.degToRad(this.camera.fov);\n    let scale_height = this.props.height / scale;\n    let camera_z_position = scale_height / (2 * Math.tan(rvFOV / 2));\n    return camera_z_position;\n  }\n\n  getScaleFromZ(camera_z_position) {\n    let rvFOV = THREE.Math.degToRad(this.camera.fov);\n    let half_fov_height = Math.tan(rvFOV / 2) * camera_z_position;\n    let fov_height = half_fov_height * 2;\n    let scale = this.props.height / fov_height;\n    return scale;\n  }\n\n  handleResize = (width, height) => {\n    this.camera.aspect = width / height;\n    this.camera.updateProjectionMatrix();\n    this.renderer.setSize(width, height);\n    let current_scale = this.getScaleFromZ(this.camera.position.z);\n    let d3_x = -(this.camera.position.x * current_scale) + this.props.width / 2;\n    let d3_y = this.camera.position.y * current_scale + this.props.height / 2;\n    var resize_transform = d3.zoomIdentity\n      .translate(d3_x, d3_y)\n      .scale(current_scale);\n    let view = d3.select(this.mount);\n    this.d3_zoom.transform(view, resize_transform);\n  }\n\n  zoomHandler() {\n    let d3_transform = d3.event.transform;\n    let scale = d3_transform.k;\n    let x = -(d3_transform.x - this.props.width / 2) / scale;\n    let y = (d3_transform.y - this.props.height / 2) / scale;\n    let z = this.getZFromScale(scale);\n    this.camera.position.set(x, y, z);\n    // point size scales at end of zoom\n    let new_size = this.zoomScaler(z);\n    let point_group = this.scene.children[0].children;\n    for (let c = 0; c < point_group.length; c++) {\n      point_group[c].material.uniforms.size.value = new_size;\n    }\n  }\n\n  setupCamera() {\n    let { width, height, embeddings_data } = this.props\n\n    let vFOV = this.camera.fov\n    let rvFOV = THREE.Math.degToRad(vFOV)\n\n    let xs = embeddings_data.map(e => e[0])\n    let min_x = _.min(xs)\n    let max_x = _.max(xs)\n    let ys = embeddings_data.map(e => e[1])\n    let min_y = _.min(ys)\n    let max_y = _.max(ys)\n\n    let max_x_from_center = _.max([min_x, max_x].map(m => Math.abs(m)))\n    let max_y_from_center = _.max([min_y, max_y].map(m => Math.abs(m)))\n\n    let max_center = Math.max(max_x_from_center, max_y_from_center)\n\n    let camera_z_start\n    // if (data_aspect > aspect) {\n    //   // console.log(\"width is limiter\");\n    //   // camera_z_start = max_x_from_center / Math.tan(rvFOV / 2) / aspect\n    // } else {\n    //   // console.log(\"height is limiter\");\n    //   // camera_z_start = max_y_from_center / Math.tan(rvFOV / 2)\n    // }\n\n    camera_z_start = max_center / Math.tan(rvFOV / 2)\n\n    let far = camera_z_start * 1.25\n    this.camera.far = far\n    this.camera.position.z = camera_z_start * 1.1\n\n    // set up zoom\n    this.d3_zoom = d3\n      .zoom()\n      .scaleExtent([this.getScaleFromZ(far - 1), this.getScaleFromZ(0.1)])\n      .on('zoom', this.zoomHandler.bind(this))\n\n    let view = d3.select(this.mount)\n    this.view = view\n    view.call(this.d3_zoom)\n    let initial_scale = this.getScaleFromZ(this.camera.position.z)\n    var initial_transform = d3.zoomIdentity\n      .translate(width / 2, height / 2)\n      .scale(initial_scale)\n    this.d3_zoom.transform(view, initial_transform)\n    this.setState({ view: view })\n  }\n\n  addPoints() {\n    let { embeddings_data,metadata } = this.props;\n\n    // split embeddings and labels into chunks to match sprites\n    let ranges = [];\n    for (let i = 0; i < this.props.settings.sprite_number; i++) {\n      let start = i * this.sprite_size;\n      let end = (i + 1) * this.sprite_size;\n      if (i === this.props.settings.sprite_number - 1) end = this.props.settings.sprite_number * this.sprite_size;\n      ranges.push([start, end]);\n    }\n    let embedding_chunks = ranges.map(range =>\n      embeddings_data.slice(range[0], range[1])\n    );\n\n    // load the textures\n    let loader = new THREE.TextureLoader();\n    this.textures = this.tile_locations.map(l => {\n      let t = loader.load(l,\n        function ( w ) {\n          this.setState({ tilesLoaded: this.state.tilesLoaded+1 });\n        }.bind(this)\n      )\n      t.flipY = false\n      t.magFilter = THREE.NearestFilter\n      return t\n    })  \n    let geometry;\n    let point_group = new THREE.Group();\n    for (let c = 0; c < this.props.settings.sprite_number; c++) {\n      let echunk = embedding_chunks[c];\n      //let lchunk = label_chunks[c]\n\n      let vertices = [];\n      for (let v = 0; v < echunk.length; v++) {\n        let embedding = echunk[v];\n        let vert = new THREE.Vector3(embedding[0], embedding[1], 0);\n        vertices[v] = vert;\n      }\n\n      geometry = new THREE.BufferGeometry();\n\n      let numVertices = vertices.length;\n      console.log(\"numVertices -->\",numVertices)\n      let positions = new Float32Array(numVertices * 3);\n      let offsets = new Float32Array(numVertices * 2);\n      let clusters = new Float32Array(numVertices * 3);\n      let colors = new Float32Array(numVertices );\n      let clustersActive = new Float32Array(numVertices );\n      geometry.addAttribute('position', new THREE.BufferAttribute(positions, 3));\n      geometry.addAttribute('offset', new THREE.BufferAttribute(offsets, 2));\n      geometry.addAttribute('color', new THREE.BufferAttribute(colors, 1));\n      geometry.addAttribute('cluster', new THREE.BufferAttribute(clusters, 3));\n      geometry.addAttribute('clusterActive', new THREE.BufferAttribute(clustersActive, 1));\n\n      for (let i = 0, index = 0, l = numVertices; i < l; i++, index += 3) {\n        let x = echunk[i][0];\n        let y = echunk[i][1];\n        let z = 0;\n        positions[index] = x;\n        positions[index + 1] = y;\n        positions[index + 2] = z;\n      }\n\n      // geometry.attributes.position.copyVector3sArray(vertices)\n\n      let texture_subsize = 1 / this.props.settings.sprite_side;\n\n      for (let i = 0, index = 0, l = numVertices; i < l; i++, index += 2) {\n        let x = ((i % this.props.settings.sprite_side) * this.props.settings.sprite_image_size) / this.props.settings.sprite_actual_size\n        let y =\n          (Math.floor(i / this.props.settings.sprite_side) * this.props.settings.sprite_image_size) / this.props.settings.sprite_actual_size\n        offsets[index] = x;\n        offsets[index + 1] = y;\n      }\n      if (this.props.settings.clusters.clusterList) {\n        // Todo: connect cluster the array\n        let clusterSelected = this.props.clusterTypeSelected;\n        let clusterColors = this.props.settings.clusters.clusterColors;\n        console.log(\"clusterSelected\",clusterSelected)\n        for (let i = 0, index = 0, l = numVertices; i < l; i++, index += 1) {\n          // Images disable when are not visible\n          colors[index] = 0.0;// default value to show all images\n\n          // Clusters visualization\n\n          if( clusterSelected !== \"-\" && this.props.settings.clusters.clusterList.includes(clusterSelected) ){ \n            //try{\n              clustersActive[index] = 1.0;\n              let clusterId = metadata[index][clusterSelected];\n              if(clusterId >= clusterColors.length){\n                clusters[index*3] = 1.0;\n                clusters[index*3 + 1] = 1.0;\n                clusters[index*3 + 2] = 1.0;\n              }else{\n                clusters[index*3] = clusterColors[clusterId][0];\n                clusters[index*3 + 1] = clusterColors[clusterId][1];\n                clusters[index*3 + 2] = clusterColors[clusterId][2];\n              }\n            //}catch(err){clustersActive[index] = 0.0;}\n          }else{\n            clustersActive[index] = 0.0;\n          }\n      }\n    }\n      // uniforms\n      let uniforms = {\n        texture: { value: this.textures[c] },\n        repeat: { value: new THREE.Vector2(texture_subsize, texture_subsize) },\n        size: { value: this.props.settings.sprite_image_size },\n      };\n\n      let vertex_shader = `\n        attribute vec2 offset;\n        varying vec2 vOffset;\n        attribute vec3 cluster;\n        varying vec3 vCluster;\n        attribute float clusterActive;\n        varying float vClusterActive;\n        attribute float color;\n        varying float vColor;\n        uniform float size;\n        void main() {\n          vOffset = offset;\n          vColor = color;\n          vCluster = cluster;\n          vClusterActive = clusterActive;\n          gl_PointSize = size;\n          gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n        }`;\n\n      let fragment_shader = `\n        uniform sampler2D texture;\n        uniform vec2 repeat;\n        varying vec2 vOffset;\n        varying vec3 vCluster;\n        varying float vClusterActive;\n        varying float vColor;\n        void main() {\n          vec2 uv = vec2( gl_PointCoord.x, gl_PointCoord.y );\n          vec4 tex = texture2D( texture, uv * repeat + vOffset );\n          // make transparent images\n          if ( tex.a < 0.003 ) discard;\n\n          // Display clusters\n          //if ( vClusterActive > 0.9 ){\n            vec4 replace_color = vec4(vCluster,1.0);\n            vec4 default_border_color = vec4(0.00392156863,0.00392156863,0.00392156863,0.00392156863);\n            vec4 diff = tex - default_border_color;\n            float equality = float(dot(diff,diff) < 0.99 && vClusterActive > 0.9);\n            tex = mix( tex, replace_color, equality);\n          //}\n\n          // Grey images filter our selection \n          //if ( vColor > 0.9 ){\n          //  tex = vec4(0.3,0.3,0.3,0.1);\n          //}\n          vec4 filterout_color = vec4(0.3,0.3,0.3,0.1);\n          float filterout_equality = float(vColor > 0.9);\n          tex = mix( tex, filterout_color, filterout_equality );\n\n          //tex.r = 1.0;\n          //tex.g = 1.0;\n          //tex.b = 1.0;\n          gl_FragColor = tex; //* vec4(vColor, 1.0);\n        }`;\n\n      // material\n      let material = new THREE.ShaderMaterial({\n        uniforms: uniforms,\n        vertexShader: vertex_shader,\n        fragmentShader: fragment_shader,\n        transparent: true\n      });\n\n      // point cloud\n      let point_cloud = new THREE.Points(geometry, material);\n      point_cloud.userData = { sprite_index: c };\n      this.pointsAr.push(point_cloud);\n      // console.log(\"new points\")\n      point_group.add(point_cloud);\n    }\n    //this.geometry = geometry;\n    this.scene.add(point_group);\n  }\n\n  addBlankHighlightPoints() {\n    let hover_container = new THREE.Group();\n    this.scene.add(hover_container);\n\n    let vert = new THREE.Vector3(0, 0, 0);\n    let vertices = [vert];\n    let geometry = new THREE.BufferGeometry();\n    let numVertices = vertices.length;\n    var positions = new Float32Array(numVertices * 3); // 3 coordinates per point\n    var offsets = new Float32Array(numVertices * 2); // 2 coordinates per point\n    geometry.addAttribute('position', new THREE.BufferAttribute(positions, 3));\n    geometry.addAttribute('offset', new THREE.BufferAttribute(offsets, 2));\n\n    // all the attributes will be filled on hover\n    let texture_subsize = 1 / this.props.settings.sprite_side;\n\n    // uniforms\n    let uniforms = {\n      texture: { value: this.textures[0] },\n      repeat: { value: new THREE.Vector2(texture_subsize, texture_subsize) },\n      size: { value: 84.0 }, //56\n    };\n\n    let vertex_shader = `\n        attribute vec2 offset;\n        varying vec2 vOffset;\n        uniform float size;\n        void main() {\n          vOffset = offset;\n          gl_PointSize = size;\n          gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n        }`;\n\n    let fragment_shader = `\n        uniform sampler2D texture;\n        uniform vec2 repeat;\n        varying vec2 vOffset;\n        void main() {\n          vec2 uv = vec2( gl_PointCoord.x, gl_PointCoord.y );\n          vec4 tex = texture2D( texture, uv * repeat + vOffset );\n          //tex.a = tex.r;\n          //tex.r = 1.0;\n          //tex.g = 1.0;\n          //tex.b = 1.0;\n          gl_FragColor = tex;\n        }`;\n\n    // material\n    var material = new THREE.ShaderMaterial({\n      uniforms: uniforms,\n      vertexShader: vertex_shader,\n      fragmentShader: fragment_shader,\n      transparent: true,\n    });\n\n    let point = new THREE.Points(geometry, material);\n    point.frustumCulled = false;\n\n    this.scene.children[1].visible = false;\n    this.scene.children[1].add(point);\n  }\n  // filter images - update color of images to get inactive (grey) or active images\n  updateProjection=(ar)=>{\n    this.filterAr = ar;\n    let ranges = [];\n    let ar_sliced = [];\n    for (let i = 0; i < this.props.settings.sprite_number; i++) {\n      let start = i * this.sprite_size;\n      let end = (i + 1) * this.sprite_size;\n      if (i === this.props.settings.sprite_number - 1) end = this.props.settings.sprite_number * this.sprite_size;\n      ranges.push([start, end]);\n      ar_sliced.push(ar.slice(start, end));\n    }\n    // \n    for (let c = 0; c < this.props.settings.sprite_number; c++) {\n      let points = this.scene.children[0].children[c];\n      points.geometry.attributes.color = new THREE.BufferAttribute(\n        ar_sliced[c],\n        1\n      );\n      points.geometry.attributes.color.needsUpdate = true;\n    }\n    // let point = this.scene.children[0].children[0]\n    // console.log(point.geometry);\n  }\n\n  updateClusterColors=(clusterSelected)=>{\n    console.log('updateClusterColors',clusterSelected);\n    \n    let numVertices =  this.props.metadata.length;//this.props.settings.sprite_number * this.sprite_size;\n    console.log(\"numVertices Update -->\",numVertices, ' metadata.length:', this.props.metadata.length)\n    let clusters = new Float32Array(numVertices * 3);\n    let clustersActive = new Float32Array(numVertices );\n    let clusterColors = this.props.settings.clusters.clusterColors;\n    console.log(numVertices,clusterSelected !==\"-\",this.props.settings.total,clusterColors);\n    for (let i = 0, index = 0, l = numVertices; i < l; i++, index += 1) {\n      if( clusterSelected !==\"-\" ){//&& i<this.props.settings.total){\n        clustersActive[index] = 1.0;\n        console.log(clustersActive[index]);\n        let clusterId = this.props.metadata[index][clusterSelected];\n        if(clusterId>=clusterColors.length){\n          clusters[index*3] = 1.0;\n          clusters[index*3 + 1] = 1.0;\n          clusters[index*3 + 2] = 1.0;\n        }else{\n          clusters[index*3] = clusterColors[clusterId][0];\n          clusters[index*3 + 1] = clusterColors[clusterId][1];\n          clusters[index*3 + 2] = clusterColors[clusterId][2];\n        }\n      }else{\n        clustersActive[index] = 0.0;\n        console.log(clustersActive[index]);\n      }\n    }\n\n    let ranges = [];\n    let clustersActiveAr_sliced = [];\n    let clustersAr_sliced = [];\n    for (let i = 0; i < this.props.settings.sprite_number; i++) {\n      let start = i * this.sprite_size;\n      let end = (i + 1) * this.sprite_size;\n      if (i === this.props.settings.sprite_number - 1) end = this.props.settings.sprite_number * this.sprite_size;\n      ranges.push([start, end]);\n      clustersActiveAr_sliced.push(clustersActive.slice(start, end));\n      clustersAr_sliced.push(clusters.slice(start, end*3));\n    }\n    \n    for (let c = 0; c < this.props.settings.sprite_number; c++) {\n      let points = this.scene.children[0].children[c];\n      \n      points.geometry.attributes.clusters = new THREE.BufferAttribute(\n        clustersAr_sliced[c],\n        3\n      );\n      points.geometry.attributes.clusters.needsUpdate = true;\n      \n      points.geometry.attributes.clustersActive = new THREE.BufferAttribute(\n        clustersActiveAr_sliced[c],\n        1\n      );\n      points.geometry.attributes.clustersActive.needsUpdate = true;\n    }\n    \n  }\n\n  highlightPoint(sprite_index, digit_index, full_index) {    \n    let { algorithm_choice, mappings } = this.props;\n\n    let point = this.scene.children[1].children[0];\n\n    // console.log(mappings[algorithm_choice][full_index]);\n    let embedding = mappings[algorithm_choice][full_index];\n\n    let vert = new THREE.Vector3(embedding[0], embedding[1], 0);\n    let vertices = [vert];\n\n    var offsets = new Float32Array(2); // 2 coordinates per point\n\n    let x = ((digit_index % this.props.settings.sprite_side) * this.props.settings.sprite_image_size) / 2048;\n    let y = (Math.floor(digit_index / this.props.settings.sprite_side) * this.props.settings.sprite_image_size) / 2048;\n    offsets[0] = x;\n    offsets[1] = y;\n\n    point.geometry.attributes.position.copyVector3sArray(vertices);\n    point.geometry.attributes.position.needsUpdate = true; // required after the first render\n    point.geometry.attributes.offset.array = offsets;\n    point.geometry.attributes.offset.needsUpdate = true; // required after the first render\n\n    // need to set attributes on geometry and uniforms on material\n    point.material.uniforms.texture.value = this.textures[sprite_index];\n  }\n\n  removeHighlights() {\n    let highlight_container = this.scene.children[1];\n    let highlights = highlight_container.children;\n    highlight_container.remove(...highlights);\n  }\n\n  checkIntersects(mouse_position) {\n    let { width, height, previewPane_ctx, previewPane_image_size } = this.props;\n\n    function mouseToThree([mouseX, mouseY]) {\n      return new THREE.Vector3(\n        (mouseX / width) * 2 - 1,\n        -(mouseY / height) * 2 + 1,\n        1\n      );\n    }\n\n    function sortIntersectsByDistanceToRay(intersects) {\n      return _.sortBy(intersects, 'distanceToRay');\n    }\n\n    let mouse_vector = mouseToThree(mouse_position);\n    this.raycaster.setFromCamera(mouse_vector, this.camera);\n    this.raycaster.params.Points.threshold = 0.25;\n    let intersects = this.raycaster.intersectObjects(\n      this.scene.children[0].children\n    );\n    if (intersects[0]) {\n      let sorted_intersects = sortIntersectsByDistanceToRay(intersects);\n      let intersect = sorted_intersects[0];\n      let sprite_index = intersect.object.userData.sprite_index;\n      let digit_index = intersect.index;\n      let full_index = sprite_index * this.sprite_size + digit_index;\n      // if filter is null then allow selected all, then when filter is defined only allow visible image to be selected\n      if( this.filterAr===undefined || this.filterAr[full_index]<1.0){\n        this.props.setHoverIndex(full_index);\n        // console.log(full_index)\n        this.highlightPoint(sprite_index, digit_index, full_index);\n        this.scene.children[1].visible = true;\n        previewPane_ctx.clearRect(0, 0,  previewPane_image_size, previewPane_image_size);\n        previewPane_ctx.fillRect(0, 0, previewPane_image_size, previewPane_image_size);\n        previewPane_ctx.fillStyle = \"transparent\";\n        try{\n          previewPane_ctx.drawImage(\n            this.datasetIMG[sprite_index],\n            // source rectangle\n            (digit_index % this.props.settings.sprite_side) * this.props.settings.sprite_image_size,\n            Math.floor(digit_index / this.props.settings.sprite_side) * this.props.settings.sprite_image_size,\n            this.props.settings.sprite_image_size,\n            this.props.settings.sprite_image_size,\n            // destination rectangle\n            0,\n            0,\n            previewPane_image_size,\n            previewPane_image_size\n          );\n        }catch (error){\n          console.log(\"previewPane_ctx.drawImage\",error);\n        }\n      }\n    } else {\n      this.props.setHoverIndex(null);\n      this.scene.children[1].visible = false;\n      previewPane_ctx.fillRect(0, 0, previewPane_image_size, previewPane_image_size);\n      previewPane_ctx.fillStyle = \"transparent\";\n    }\n  }\n\n  handleMouse() {\n    let view = d3.select(this.renderer.domElement);\n\n    this.raycaster = new THREE.Raycaster();\n\n    view.on('mousemove', () => {\n      let [mouseX, mouseY] = d3.mouse(view.node());\n      let mouse_position = [mouseX, mouseY];\n      this.checkIntersects(mouse_position);\n    })\n  }\n\n  init() {\n    let { width, height } = this.props;\n    this.scene = new THREE.Scene();\n    let vFOV = 75;\n    let aspect = width / height;\n    let near = 0.01;\n    let far = 1000;\n\n    this.camera = new THREE.PerspectiveCamera(vFOV, aspect, near, far);\n\n    this.renderer = new THREE.WebGLRenderer();\n    this.renderer.setClearColor(0x111111, 1);\n    this.renderer.setSize(width, height);\n    this.mount.appendChild(this.renderer.domElement);\n\n    this.addPoints();\n    this.addBlankHighlightPoints();\n    this.setupCamera();\n    this.animate();\n    this.handleMouse();\n\n    this.changeEmbeddings(this.props.algorithm_choice);\n  }\n\n  animate() {\n    requestAnimationFrame(this.animate);\n    TWEEN.update();\n    this.renderer.render(this.scene, this.camera);\n  }\n\n  componentDidMount() {\n    this.init();\n  }\n\n  componentDidUpdate(prevProps) {\n    let { width, height } = this.props;\n    if (width !== prevProps.width || height !== prevProps.height) {\n      this.handleResize(width, height);\n    }\n    \n    if (prevProps.algorithm_choice !== this.props.algorithm_choice) {\n      this.changeEmbeddings(\n        //prevProps.algorithm_choice,\n        this.props.algorithm_choice,\n      );\n    }\n    \n    if (this.props.scaleMin !== prevProps.scaleMin || this.props.scaleMax !== prevProps.scaleMax){\n      this.handleResize(width, height);\n    }\n  }\n\n  componentWillUnmount() {\n    this.mount.removeChild(this.renderer.domElement);\n  }\n\n  render() {\n    let { width, height } = this.props;\n    const tileProgress = this.state.tilesLoaded;\n    const allTiles = this.props.settings.sprite_number;\n    return (\n      <><div>\n        {tileProgress < 1 ? <div className=\"loading\"><CircularProgress color=\"inherit\"/><div>loading tiles...</div></div> : \n        tileProgress < allTiles-1 ? <div className=\"loading-small\"><CircularProgress color=\"inherit\"/><div>loading...</div></div> : \n        ''\n      }\n      </div><div\n          style={{ width: width, height: height, overflow: 'hidden' }}\n          ref={mount => {\n            this.mount = mount\n          } } /></>\n    ) \n  }\n}\n\nexport default React.memo(Projection)\n\n\n","import React, { Component } from 'react'\nimport PreviewPane from './PreviewPane'\nimport SliderPane from './SliderPane'\nimport FilterPane from './FilterPane'\nimport InfoPane from './InfoPane'\nimport ViewPane from './ViewPane'\nimport MappingsPane from './MappingsPane'\nimport { ProSidebar, Menu, MenuItem, SubMenu } from 'react-pro-sidebar';\nimport './scss/Menu.scss';\nimport Projection from './Projection'\nimport * as _ from 'lodash'\nimport { CircularProgress } from \"@material-ui/core\";\nimport { CSVLink } from \"react-csv\";\n\nclass Layout extends Component {\n  constructor(props) {\n    super(props)\n    let total = this.props.settings[\"total\"]\n    this.state = {\n      ww: null,\n      wh: null,\n      hover_index: 0,\n      previewPane_height: null,\n      controlPane_height: null,\n      filterPane_height: null,\n      algorithm_choice: null,\n      allFilter: {},\n      currentProjection: new Float32Array(total).fill(0),\n      currentFilter: new Float32Array(total).fill(0),\n      currentSearch: new Float32Array(total).fill(0),\n      scaleMin: 14,\n      scaleMax: 70,\n      clusterTypeSelected:'-',\n      filterDataToExportCSV:[],\n      dimensions: {}\n    }\n    this.previewPane_ctx = null;\n    this.setSize = _.debounce(this.setSize.bind(this), 200);\n    this.setPreviewPaneCanvas = this.setPreviewPaneCanvas.bind(this);\n    this.setPreviewImage = this.setPreviewImage.bind(this);\n    // this.onImgLoad = this.onImgLoad.bind(this);\n\n    this.selectAlgorithm = this.selectAlgorithm.bind(this);\n    this.selectDataset = this.selectDataset.bind(this);\n    this.refProjection = React.createRef();\n  }\n\n  componentDidMount() {\n    this.selectAlgorithm(this.props.algorithm_name);\n    this.setSize();\n    window.addEventListener('resize', this.setSize);\n    this.calcDefaultScale();\n  }\n\n\n  calcDefaultScale(){\n    if (this.props.settings[\"total\"] < 10000) {\n      this.setState( { scaleMin: 15 } )} else {\n      this.setState( { scaleMin: 5 } )\n      }\n  }\n\n  handleChangeScale(e,val) {\n    this.setState({ scaleMin: val})\n  }\n\n  handleChangeZoom(e,val) {\n    this.setState({ scaleMax: val})\n  }\n\n  handleChangeCluster(e) {\n    let value = e.target.value;\n    this.setState({ clusterTypeSelected: value})\n    try{\n      this.refProjection.current.updateClusterColors(value)\n    } catch(error) {console.log(\"error updateClusterColors\")}\n  }\n\n  calculateProjection=(newArr,type, update)=>{\n    let A, B, arr;\n    if(type===\"filter\"){\n      this.setState({currentFilter: newArr})\n      A = newArr;\n      B = this.state.currentSearch;\n    }\n    if(type===\"search\"){\n      this.setState({currentSearch: newArr});\n      A = this.state.currentFilter;\n      B = newArr;\n    }\n    if(update){\n      arr = A.map((x, idx) => x + B[idx]);\n      this.setState({currentProjection: arr});\n    } else {\n      arr = newArr;\n    }\n    try{\n      this.refProjection.current.updateProjection(arr);\n    } catch(error) {}\n    \n    // Release memory of export filter metadata\n    if(this.state.filterDataToExportCSV.length>0) this.setState({filterDataToExportCSV: []});\n  }\n\n  selectAlgorithm(v) {\n    let i = this.props.algorithm_options.indexOf(v);\n    if(i<0) i = 0;\n    this.setState({ algorithm_choice: i });\n    // Save algorithm in URL parameters\n    this.props.addToUrl('projection',this.props.algorithm_options[i]);\n  }\n\n  selectDataset(p) {\n    this.props.changeDataset(p);\n  }\n\n  setSize() {\n    this.setState({ ww: window.innerWidth, wh: window.innerHeight });\n    let previewPane_height = this.previewPane_mount.offsetHeight;\n    this.setState({ previewPane_height: previewPane_height });\n\n    if (this.previewPane_ctx) this.previewPane_ctx.imageSmoothingEnabled = false;\n  }\n\n  setPreviewPaneCanvas(canvas) {\n    let ctx = canvas.getContext('2d');\n    ctx.imageSmoothingEnabled = false;\n    this.previewPane_ctx = ctx;\n    console.log(ctx);\n  }\n\n  // onImgLoad({target:img}) {\n  //   this.setState({dimensions:{height:img.offsetHeight,\n  //                              width:img.offsetWidth}});\n  // }\n\n  setPreviewImage() {\n      return (\n      <img\n      src={ this.props.settings.url_prefix + this.props.metadata[this.state.hover_index].Filename }\n      // onLoad={this.onImgLoad}\n      alt=\"preview\"\n      style={{\n        verticalAlign: \"middle\",\n      }}\n      />)\n  }\n\n  setHoverIndex(hover_index) {\n    if (hover_index){\n      this.setState({ hover_index: hover_index });\n    }\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.setSize);\n  }\n  \n\n  render() {\n    let {\n      embeddings_data,\n      mappings,\n      algorithm_options,\n      dataset_options,\n      metadata,\n      settings,\n      barData,\n      clusterTypeSelected\n    } = this.props;\n\n    let {\n      ww,\n      wh,\n      hover_index,\n      algorithm_choice,\n      currentProjection,\n      allFilter,\n      filterDataToExportCSV\n    } = this.state;\n\n    let previewPane_ctx = this.previewPane_ctx;\n    \n    let line_height = 1.5;\n\n    let previewPane_style = {\n      position: 'absolute',\n      left: 0,\n      top: 0,\n      background: '#222',\n      flexDirection: 'column',\n      zIndex: 9\n    };\n    let controlMenu_style = {\n      position: 'absolute',\n      right: 0,\n      top: 0,\n      height: 'auto',\n      maxHeight: '100vh',\n      overflow: 'auto',\n      background: '#222',\n      zIndex: 9\n    };\n\n    let main_style = {\n      position: 'relative',\n      height: '100vh',\n      background: '#111',\n      overflow: 'hidden',\n    };\n\n    let previewPane_image_size;\n\n    let font_size = 16;\n    if (ww < 800) {\n      font_size = 14;\n      previewPane_style = {\n        ...previewPane_style,\n        flexDirection: 'row',\n        width: '100%',\n        top: 'auto',\n        height: 'auto',\n        bottom: 0,\n      };\n      main_style = { width: ww, height: wh };\n      previewPane_image_size = font_size * line_height * 3;\n    } else if (ww < 800 + 600) {\n      let scaler = 200 + (300 - 200) * ((ww - 800) / 600);\n      font_size = 14 + 2 * ((ww - 800) / 600);\n      previewPane_style = {\n        ...previewPane_style,\n        width: scaler,\n      };\n\n      previewPane_image_size = previewPane_style.width;\n      main_style = {\n        ...main_style,\n        width: ww,\n        height: wh,\n      };\n    } else {\n      previewPane_style = {\n        ...previewPane_style,\n        width: 300,\n      };\n      main_style = {\n        ...main_style,\n        width: ww,\n        height: wh,\n      };\n      previewPane_image_size = previewPane_style.width;\n    }\n\n    let grem = font_size * line_height;\n\n    let general_style = {\n      fontSize: font_size,\n      lineHeight: line_height,\n    };\n\n\n    let displayNumb = 0;\n    for(let i=0;i<settings.total;i++){\n      if(currentProjection[i]===0){\n        displayNumb++;\n      }\n    }\n\n    return ww !== null ? (\n      <div style={general_style}>\n        <div\n          style={controlMenu_style}\n          ref={controlMenu_mount => {\n            this.controlMenu_mount = controlMenu_mount\n          }}\n        >\n          <div>\n          <ProSidebar>\n            <Menu iconShape=\"square\">\n              <SubMenu title=\"Data & Projections\" defaultOpen=\"True\">\n              <MenuItem>\n              <MappingsPane\n                grem={grem}\n                algorithm_options={algorithm_options}\n                algorithm_choice={algorithm_choice}\n                selectAlgorithm={this.selectAlgorithm}\n                dataset_options={dataset_options}\n                selectDataset={this.selectDataset}\n                selectedDataset={this.props.selectedDataset}\n                datasetInfo={settings[\"datasetInfo\"]}\n              />\n              </MenuItem>\n              </SubMenu>\n              <SubMenu title=\"Dimension Filters\" defaultOpen=\"True\">\n                <MenuItem>\n                <SliderPane\n                grem={grem}\n                metadata={metadata}\n                hover_index={hover_index}\n                settings={settings}\n                barData={barData}\n                calculateProjection={this.calculateProjection}\n                currentProjection={currentProjection}\n                allFilter={allFilter}\n              />\n                </MenuItem>\n                </SubMenu>\n                <SubMenu title=\"Advanced Filters\" style={{overflow:\"visible\"}}>\n                <MenuItem>\n                  <FilterPane\n                    grem={grem}\n                    calculateProjection={this.calculateProjection}\n                    hover_index={hover_index}\n                    settings={settings}\n                    metadata={metadata}\n                    currentProjection={currentProjection}\n                    allFilter={allFilter}\n                    // filterDataToExportCSV={filterDataToExportCSV}\n                  />\n                </MenuItem>\n              </SubMenu>\n              <MenuItem>\n            <CSVLink \n                data={this.state.filterDataToExportCSV} \n                filename={\"CSN_filtered_metadata.csv\"} \n                target=\"_blank\"\n\n                onClick={() => {\n                  let filteredMetadata = [];\n                  for (let i=0;i<metadata.length;i++) {\n                    if(currentProjection[i]===0){\n                      var obj = metadata[i];\n                      filteredMetadata.push(obj)\n                    }\n                  }\n                  this.setState({filterDataToExportCSV: filteredMetadata});\n                  console.log(filterDataToExportCSV); \n                }}                \n            >\n              <h3>Download filtered metadata as CSV</h3>\n              <div className='info'>showing {displayNumb} / {settings.total}</div>\n              {/* <Button variant=\"contained\" size=\"small\" >export as CSV</Button> */}\n            </CSVLink>\n            </MenuItem>\n            <MenuItem>\n            </MenuItem>\n            </Menu>\n          </ProSidebar>\n          </div>\n        </div>    \n\n        <div\n          style={previewPane_style}\n          ref={previewPane_mount => {\n            this.previewPane_mount = previewPane_mount\n          }}\n        >\n          <ProSidebar\n            width={previewPane_image_size}>\n            <Menu iconShape=\"square\">\n            <MenuItem>\n            <a href=\"https://github.com/Collection-Space-Navigator/CSN\" target=\"_blank\" rel=\"noreferrer\"><h3>Collection Space Navigator</h3></a>\n            </MenuItem>\n            <SubMenu title=\"About\" \n              >\n              <div className='about'>\n                The Collection Space Navigator (CSN) is an <strong>interactive visualization interface for multidimensional datasets</strong>.\n                It functions as an explorative visualization tool for researching collections and their multidimensional representations. \n                We designed this tool to better understand multidimensional data, its methods, and semantic qualities through spatial navigation and filtering. \n                CSN can be used with any image collection and can be customized for specific research needs. <a href=\"https://github.com/Collection-Space-Navigator/CSN\" target=\"_blank\" rel=\"noreferrer\" ><strong>[more on GitHub...]</strong></a>\n                \n              </div>\n              </SubMenu>\n              <SubMenu title=\"Object Preview\" defaultOpen=\"True\" \n              >\n                <PreviewPane\n                  previewPane_image_size={previewPane_image_size}\n                  setPreviewPaneCanvas={this.setPreviewPaneCanvas}\n                  setPreviewImage={this.setPreviewImage}\n                  hover_index={hover_index}\n                />\n              </SubMenu>\n              <SubMenu title=\"Object Info\" defaultOpen=\"True\" >\n                <MenuItem>\n                <InfoPane\n                  hover_index={hover_index}\n                  metadata={metadata}\n                  infos={settings.info}\n                />\n                </MenuItem>\n              </SubMenu>\n              <SubMenu title=\"Object View Settings\" >\n                <MenuItem>\n                <ViewPane\n                  clusters={settings.clusters}\n                  scaleMin={this.state.scaleMin}\n                  scaleMax={this.state.scaleMax}\n                  handleChangeScale = {this.handleChangeScale.bind(this)}\n                  handleChangeZoom = {this.handleChangeZoom.bind(this)}\n                  handleChangeCluster = {this.handleChangeCluster.bind(this)}\n                  total = {settings.total}\n                />\n                </MenuItem>\n              </SubMenu>\n            </Menu>\n          </ProSidebar>\n          \n        </div>\n        <div style={main_style}>\n          <Projection\n            ref={this.refProjection}\n            width={main_style.width}\n            height={main_style.height}\n            embeddings_data={embeddings_data}\n            mappings={mappings}\n            metadata={metadata}\n            previewPane_ctx={previewPane_ctx}\n            previewPane_image_size={previewPane_image_size}\n            setHoverIndex={this.setHoverIndex.bind(this)}\n            algorithm_choice={algorithm_choice}\n            datasetDir={this.props.datasetDir}\n            clusterTypeSelected={clusterTypeSelected}\n            settings={settings}\n            initPath={this.props.initPath}\n            scaleMin={this.state.scaleMin}\n            scaleMax={this.state.scaleMax}\n            currentProjection={currentProjection}\n            // tiles={this.tiles}\n          />\n        </div>\n      </div>\n      \n    ) : (\n      <div className=\"loading\" ><CircularProgress color=\"inherit\"/><div>loading layout...</div></div>\n    )\n  }\n}\n\nexport default Layout\n\n\n\n","import React, { Component } from 'react'\nimport {useParams, useNavigate} from \"react-router-dom\";\nimport Layout from './Layout'\nimport * as _ from 'lodash'\nimport * as d3 from 'd3'\nimport color from 'color'\n// import * as THREE from 'three'\nimport { CircularProgress } from \"@material-ui/core\";\n\n\nfunction withRouter(Component) {\n  return props => <Component {...props} params={useParams()} navigate={useNavigate()} />;\n}\n\nclass Data extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // tilesLoaded: 0,\n      algorithm_options: null,\n      dataset_options: null,\n      dataset_dirs: null,\n      embeddings_data: null,\n      mappings: null,\n      metadata:null,\n      defaultDataset:null,\n      algorithm_name:0\n    };\n  }\n\n  scaleEmbeddings(embeddings) {\n    let xs = embeddings.map(e => Math.abs(e[0]));\n    let ys = embeddings.map(e => Math.abs(e[1]));\n    let max_x = _.max(xs);\n    let max_y = _.max(ys);\n    let max = Math.max(max_x, max_y);\n    let scale = d3\n      .scaleLinear()\n      .domain([-max, max])\n      .range([-20, 20]);\n    let scaled_embeddings = embeddings.map(e => [scale(e[0]), scale(e[1])]);\n    return scaled_embeddings;\n  }\n  \n  componentDidMount() {\n    // Get parameters from URL and save to settings\n    const queryString = window.location.search;\n    const urlParams = new URLSearchParams(queryString);\n    this.setState({ selectedDataset: urlParams.get('dataset')});\n    if(urlParams.get('projection')!==undefined) this.setState({algorithm_name:urlParams.get('projection')});\n    // Load embeddings\n    this.loadInit('datasets/datasets_config.json')\n  }\n\n  loadConfig(path){\n    this.loadSettings(`datasets/${path}/config.json`);\n    this.loadBarData(`datasets/${path}/barData.json`);\n    this.loadMetadata(`datasets/${path}/metadata.json`);\n  }\n  \n  prepareMappings(ID){\n    let algorithm_options = [];\n    for (let i in this.state.settings.embeddings) {\n      console.log(this.state.settings.embeddings[i].name);\n      algorithm_options[i] = this.state.settings.embeddings[i].name;\n    }\n    this.setState({ algorithm_options: algorithm_options });\n  }\n\n  loadDataset(ID){\n    let mappings = [];\n    const embeddings = this.state.settings.embeddings;\n    for (let i in embeddings) {\n      // console.log(embeddings[i].key);\n      fetch(`${process.env.PUBLIC_URL}/datasets/${this.state.datasetDir}/${embeddings[i].file}`)\n        .then(response => response.json())\n        .then(embeddings_data => {\n          let scaled_embeddings = embeddings_data;\n          // this.scaleEmbeddings(embeddings_data);\n          mappings[i] = scaled_embeddings;\n        }\n        )\n        .then(() => {\n          this.setState({ mappings: mappings, embeddings_data: mappings[0] })\n        })\n  }\n}\n\n  // loadTiles(){ \n  //   const tile_locations = [...Array(this.state.settings.sprite_number)].map(\n  //     (n, i) => `${process.env.PUBLIC_URL}/datasets/${this.state.datasetDir}/tile_${i}.png`\n  //   )\n  //   let loader = new THREE.TextureLoader();\n  //   this.tiles = tile_locations.map(l => {\n  //     let t = loader.load(l,\n  //       function ( texture ) {\n  //         this.setState({ tilesLoaded: this.state.tilesLoaded+1 });\n  //       }.bind(this)\n  //     )\n  //     t.flipY = false\n  //     t.magFilter = THREE.NearestFilter\n  //     return t\n  //   })    \n  // }\n\n\n  addToUrl(paramName,value){\n    const queryString = window.location.search;\n    const urlParams = new URLSearchParams(queryString);\n    urlParams.set(paramName, value);\n    this.props.navigate(\"?\"+urlParams.toString());\n  }\n\n  prepareDatasets(ID){\n    let dataset_options = [];\n    let dataset_dirs = [];\n    for (let i in this.state.settings.embeddings) {\n      console.log(this.state.settings.embeddings[i].name);\n      dataset_options[i] = this.state.settings.embeddings[i].name;\n      dataset_dirs[i] = this.state.settings.embeddings[i].directory;\n    }\n    this.setState({ dataset_options: dataset_options, dataset_dirs: dataset_dirs });\n  }\n\n  changeDataset(choice){\n    this.addToUrl('dataset',choice);\n    let k = this.state.dataset_options.indexOf(choice);\n    let newDataset = this.state.dataset_dirs[k]\n    this.setState({ \n      selectedDataset: choice, \n      datasetDir: newDataset,\n      algorithm_options: null,\n      embeddings_data: null,\n      mappings: null,\n      metadata: null\n    });\n    this.loadConfig(newDataset);\n  }\n\n  loadInit(file){\n    fetch(`${process.env.PUBLIC_URL}/`+file)\n      .then(response => response.json())\n      .then(init =>{\n        let dataset_options = [];\n        let dataset_dirs = [];\n        for (let i in init.data) {\n          console.log(init.data[i].directory);\n          dataset_options[i] = init.data[i].name;\n          dataset_dirs[i] = init.data[i].directory;\n        }\n        this.setState({ dataset_options: dataset_options,dataset_dirs: dataset_dirs});\n        // Select dataset folder from defined in URL parameters\n        if(this.state.selectedDataset===null){\n          this.setState({ selectedDataset: init.data[init.default].name,  datasetDir: init.data[init.default].directory});\n          this.addToUrl('dataset',init.data[init.default].name);\n        }else{\n          let foundInitDataset = false;\n          for (let i in init.data) {\n            if(init.data[i].name===this.state.selectedDataset){\n              this.setState({datasetDir: init.data[i].directory});\n              foundInitDataset = true;\n            } \n          }\n          if(!foundInitDataset) this.setState({ selectedDataset: init.data[init.default].name,  datasetDir: init.data[init.default].directory});\n        }\n      }\n      )\n      .then(()=> \n      this.loadConfig(this.state.datasetDir))\n\n  }\n\n  loadSettings(file){\n    fetch(`${process.env.PUBLIC_URL}/`+file)\n      .then(response => response.json())\n      .then(settings =>{\n        // Convert colors from rgb(255,0,0) to array [1.0,0.0,0.0]\n        try{\n          const floatColorConvertedArr = settings.clusters.clusterColors.map(myColorFunction);\n          function myColorFunction(value) {\n            return [color(value).rgb().array()[0]/255,color(value).rgb().array()[1]/255,color(value).rgb().array()[2]/255];\n          }\n          settings.clusters.clusterColors = floatColorConvertedArr;\n        }catch(error){}\n        // Save settings to \n        this.setState({\n          settings: settings\n        });\n      }\n      )\n      .then(() =>\n      this.prepareMappings(0))\n      .then(()=> \n      this.loadDataset(0))\n      // .then(()=> \n      // this.loadTiles())\n  }\n\n  loadMetadata(file){\n    fetch(`${process.env.PUBLIC_URL}/`+file)\n      .then(response => response.json())\n      .then(metadata =>\n        this.setState({\n          metadata: metadata,\n        })\n      )\n  }\n\n  loadBarData(file){\n    fetch(`${process.env.PUBLIC_URL}/`+file)\n      .then(response => response.json())\n      .then(barData =>\n        this.setState({\n          barData: barData,\n        })\n      )\n  }\n\n\n  render() {\n    return this.state.embeddings_data && this.state.metadata ? (\n\n      <Layout\n        {...this.state}\n        addToUrl={this.addToUrl.bind(this)}\n        algorithm_name={this.state.algorithm_name}\n        algorithm_options={this.state.algorithm_options}\n        dataset_options={this.state.dataset_options}\n        dataset_dirs={this.state.dataset_dirs}\n        changeDataset={this.changeDataset.bind(this)}\n        selectedDataset={this.state.selectedDataset}\n        datasetDir={this.state.datasetDir}\n        // tiles={this.tiles}\n      />\n\n    ) : (\n      <div className=\"loading\" ><CircularProgress color=\"inherit\"/><div>loading datasets... </div></div>\n      \n    )\n  }\n}\n\nexport default withRouter(Data)\n\n","import React from \"react\";\nimport {\n  BrowserRouter, Routes, Route\n} from \"react-router-dom\";\n\n// Area components\nimport './App.css'\n\nimport WithRouter from './Data'\n\nexport default function App() {\n  \n  return (\n    <BrowserRouter>\n      <Routes>\n        <Route exact path=\"/\" element={<WithRouter/>} />\n        <Route exact path=\"/CSN\" element={<WithRouter/>}/> \n      </Routes>\n    </BrowserRouter>\n  );\n\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}